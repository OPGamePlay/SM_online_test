{"version":3,"file":"svelte-bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Button.svelte","../../src/IconLink.svelte","../../src/Mods.svelte","../../src/Credits.svelte","../../node_modules/svelte/store/index.mjs","../../src/globals.js","../../src/routes.js","../../src/stores.js","../../src/Load.svelte","../../src/Help.svelte","../../src/IconSlot.svelte","../../src/KeyMapping.svelte","../../src/PlayerConfig.svelte","../../src/Options.svelte","../../src/Pie.svelte","../../src/Localization.svelte","../../src/PageInProgress.svelte","../../src/Lobby.svelte","../../src/NoServersMessage.svelte","../../src/PlayerConfigHotseat.svelte","../../src/Multiplayer.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.53.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<script>\r\n    export let text;\r\n    export let style;\r\n    export let iconPath;\r\n    export let isActive;\r\n    export let title = undefined;\r\n    export let disabled = false;\r\n    export let doLocalizeText = true;\r\n    let _class = \"\";\r\n    export { _class as class };\r\n</script>\r\n\r\n<button\r\n    class={`button-wrapper ${_class} ${isActive ? \"is-active\" : \"\"}`}\r\n    {style}\r\n    {disabled}\r\n    {title}\r\n    on:click\r\n    {...$$restProps}\r\n>\r\n    <div class=\"button-inner\">\r\n        {#if iconPath}<div\r\n                class=\"icon\"\r\n                style={`background-image: url('ui/icons/${iconPath}')`}\r\n            />{/if}\r\n        <span class=\"button-text\">\r\n            {doLocalizeText ? globalThis.i18n(text) : text}\r\n        </span>\r\n    </div>\r\n</button>\r\n\r\n<style>\r\n    button:disabled {\r\n        cursor: not-allowed;\r\n    }\r\n    .button-inner {\r\n        width: 100%;\r\n        height: 100%;\r\n        box-sizing: border-box;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: stretch;\r\n    }\r\n    .justify-center .button-inner {\r\n        justify-content: center;\r\n    }\r\n    .justify-center .button-text {\r\n        width: 100%;\r\n    }\r\n    .icon {\r\n        background-repeat: no-repeat;\r\n        background-size: cover; /* Make the image cover the div */\r\n        background-position: 50%; /* Center the image inside the div */\r\n        margin-right: 8px;\r\n    }\r\n    .button-text {\r\n        white-space: nowrap;\r\n        margin-right: 8px;\r\n    }\r\n</style>\r\n","<script>\r\n    export let src;\r\n    export let alt;\r\n    export let href;\r\n    export let width;\r\n    export let isActive;\r\n    export let text = \"\";\r\n    let _class = \"\";\r\n    export { _class as class };\r\n</script>\r\n\r\n<a target=\"_blank\" rel=\"noreferrer\" {href}>\r\n    <button\r\n        class={`button-wrapper ${_class} ${isActive ? \"is-active\" : \"\"}`}\r\n        on:click\r\n        {...$$restProps}\r\n    >\r\n        <div>\r\n            <img {src} {width} {alt} />\r\n            {#if text !== \"\"}\r\n                &nbsp;\r\n                <span>{text}</span>\r\n            {/if}\r\n        </div>\r\n    </button>\r\n</a>\r\n\r\n<style lang=\"scss\">\r\n    button > div {\r\n        height: 24px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n    img {\r\n        // Ensure image doesn't make button grow\r\n        max-height: 100%;\r\n    }\r\n</style>\r\n","<script>\r\n    import Button from \"./Button.svelte\";\r\n    import IconLink from \"./IconLink.svelte\";\r\n    let forceRerender = 0;\r\n    if (!globalThis.activeMods) {\r\n        globalThis.activeMods = [];\r\n    }\r\n</script>\r\n\r\n<div class=\"flex\">\r\n    <aside class=\"\">\r\n        <div class=\"flex flex-direction-column gap-15 pad-20\">\r\n            <div class=\"flex flex-direction-column gap-15\">\r\n                <div class=\"flex align-items-center gap-20\">\r\n                    <Button\r\n                        on:click={() => window.goBack()}\r\n                        type=\"button\"\r\n                        text=\"🠔 Back\"\r\n                        class=\"sm\"\r\n                    />\r\n                    <h1 class=\"aside-title\">{globalThis.i18n(\"Mods\")}</h1>\r\n                </div>\r\n            </div>\r\n            <div>Modding works in both singleplayer and multiplayer!</div>\r\n            <div>\r\n                Join the #modding channel in the Spellmasons Discord to keep up\r\n                with the latest news on modding!\r\n            </div>\r\n            <IconLink\r\n                src=\"ui/discord_logo.png\"\r\n                alt=\"Spellmasons Discord https://discord.gg/q6sUCreHeJ\"\r\n                width=\"24px\"\r\n                href=\"https://discord.gg/q6sUCreHeJ\"\r\n                class=\"button-wrapper-bg-2\"\r\n                text=\"Spellmasons Discord\"\r\n            />\r\n            <IconLink\r\n                src=\"ui/externalLink.svg\"\r\n                href=\"https://youtube.com/playlist?list=PLrNoNMIiNc_E7L-n4GGboHXQJq-cP2Cs1\"\r\n                text=\"Make your Own Mod Youtube Series\"\r\n            />\r\n            <IconLink\r\n                src=\"ui/externalLink.svg\"\r\n                href=\"https://github.com/jdoleary/Spellmasons\"\r\n                text=\"Engine Source Code\"\r\n            />\r\n            <IconLink\r\n                src=\"ui/externalLink.svg\"\r\n                href=\"https://github.com/jdoleary/spellmasons-mods\"\r\n                text=\"Mod Library Source Code\"\r\n            />\r\n        </div>\r\n    </aside>\r\n    <main>\r\n        {#if globalThis.mods}\r\n            {#key forceRerender}\r\n                <table class=\"modlist\">\r\n                    <tbody>\r\n                        {#each globalThis.mods as { modName, author, description, screenshot, spells, units, pickups }}\r\n                            <tr class=\"mod-box\">\r\n                                <td class=\"mod-screenshot\">\r\n                                    {#if screenshot !== undefined}\r\n                                        <img src={screenshot} alt=\"mod\" />\r\n                                    {/if}\r\n                                </td>\r\n                                <td style=\"white-space:nowrap;\">\r\n                                    <h3 class=\"mod-name\">\r\n                                        {modName}\r\n                                    </h3>\r\n                                    <div>\r\n                                        by: {author}\r\n                                    </div>\r\n                                </td>\r\n                                <td class=\"mod-description\">\r\n                                    <!-- <div>{description}</div> -->\r\n                                    <div>\r\n                                        {spells && spells.length\r\n                                            ? \"Spells: \" +\r\n                                              spells\r\n                                                  .map((s) => s.card.id)\r\n                                                  .join(\", \")\r\n                                            : \"\"}\r\n                                    </div>\r\n                                    <div>\r\n                                        {units && units.length\r\n                                            ? \"Units: \" +\r\n                                              units.map((u) => u.id).join(\", \")\r\n                                            : \"\"}\r\n                                    </div>\r\n                                    <div>\r\n                                        {pickups && pickups.length\r\n                                            ? \"Pickups: \" +\r\n                                              pickups\r\n                                                  .map((p) => p.name)\r\n                                                  .join(\", \")\r\n                                            : \"\"}\r\n                                    </div>\r\n                                </td>\r\n                                <td class=\"mod-button\">\r\n                                    <Button\r\n                                        text={globalThis.activeMods.indexOf(\r\n                                            modName\r\n                                        ) === -1\r\n                                            ? \"Enable \"\r\n                                            : \"Disable\"}\r\n                                        class={globalThis.activeMods.indexOf(\r\n                                            modName\r\n                                        ) === -1\r\n                                            ? \"appear-disabled\"\r\n                                            : \"\"}\r\n                                        style=\"text-align:center;\"\r\n                                        on:click={() => {\r\n                                            if (\r\n                                                globalThis.activeMods.indexOf(\r\n                                                    modName\r\n                                                ) === -1\r\n                                            ) {\r\n                                                globalThis.activeMods.push(\r\n                                                    modName\r\n                                                );\r\n                                            } else {\r\n                                                globalThis.activeMods =\r\n                                                    globalThis.activeMods.filter(\r\n                                                        (m) => m !== modName\r\n                                                    );\r\n                                            }\r\n                                            globalThis.saveActiveMods(\r\n                                                globalThis.activeMods\r\n                                            );\r\n\r\n                                            forceRerender++;\r\n                                        }}\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                        {/each}\r\n                    </tbody>\r\n                </table>\r\n            {/key}\r\n        {:else}\r\n            <div>\r\n                <div class=\"margin-bottom-15\">\r\n                    No mods found. Try verifying the integrity of Steam game\r\n                    files.\r\n                </div>\r\n                <img\r\n                    src=\"ui/verifyIntegrity.gif\"\r\n                    alt=\"shows how to verify the integrity of steam game files\"\r\n                />\r\n            </div>\r\n        {/if}\r\n    </main>\r\n</div>\r\n\r\n<style>\r\n    main {\r\n        /* Wider to allow for longer mod descriptions */\r\n        max-width: 1200px;\r\n        width: 100%;\r\n        margin: 0 80px;\r\n    }\r\n    aside {\r\n        max-width: 260px;\r\n    }\r\n    table {\r\n        border-collapse: separate;\r\n        /* To allow the tr to have a consistent background color without gaps */\r\n        border-spacing: 0;\r\n        width: 100%;\r\n    }\r\n    tr:nth-child(odd) {\r\n        background-color: #3b3b3b;\r\n    }\r\n    tr:hover {\r\n        background-color: #636363;\r\n    }\r\n\r\n    td {\r\n        padding: 8px;\r\n        vertical-align: top;\r\n        text-align: left;\r\n    }\r\n\r\n    .mod-button {\r\n        vertical-align: middle;\r\n    }\r\n    .mod-description {\r\n        padding-top: 12px;\r\n    }\r\n    .mod-name {\r\n        margin: 0;\r\n    }\r\n    .mod-box {\r\n        border: 1px solid white;\r\n    }\r\n    .mod-box .mod-screenshot {\r\n        width: 100px;\r\n        height: 80px;\r\n    }\r\n    .mod-box img {\r\n        height: 80px;\r\n        width: 100%;\r\n        object-fit: contain;\r\n    }\r\n    div {\r\n        color: white;\r\n    }\r\n</style>\r\n","<script>\r\n    import Button from \"./Button.svelte\";\r\n    // Note: All urls need to be allowlisted in the electron repo isSafeForExternalOpen()\r\n    const credits = [\r\n        {\r\n            name: \"Jordan O'Leary\",\r\n            did: \"Game Design, Development, Game Engine, Multiplayer Backend, Dev Ops, Marketing\",\r\n        },\r\n        {\r\n            name: \"theBlurryBox\",\r\n            url: \"https://theblurrybox.com\",\r\n            did: \"Art and Animation\",\r\n        },\r\n        {\r\n            name: \"Brad Clark\",\r\n            did: \"Audio Mastering, Playtesting Lead, and QA Wizard\",\r\n        },\r\n        {\r\n            name: \"Valentin Cochet\",\r\n            url: \"https://twitter.com/coc_val\",\r\n            did: \"Sound Effect Design\",\r\n        },\r\n        {\r\n            name: \"The Synthful\",\r\n            url: \"https://instagram.com/the_snythful/\",\r\n            did: \"Original Sound Track\",\r\n        },\r\n        { name: \"Jake O'Connell\", did: \"UI Design and Video Production\" },\r\n        { name: \"Matt Sweda\", did: \"Brainstorming\" },\r\n        { name: \"Kacey Misskelley\", did: \"User Experience Research\" },\r\n        { name: \"Russell Champoux\", did: \"Playtesting\" },\r\n        { name: \"Rachel Bruhn\", did: \"Playtesting\" },\r\n        { name: \"Jakob Free\", did: \"Playtesting\" },\r\n        { name: \"Lochlan O'Leary\", did: \"Playtesting\" },\r\n        { name: \"Chad Geary\", did: \"Copywriting Editor\" },\r\n        { name: \"cie_yukari\", did: \"Translation: Chinese, Japanese\" },\r\n        { name: \"Deadams10\", did: \"Translation: Dutch\" },\r\n        { name: \"Nick 0xFF\", did: \"Translation: Italian\" },\r\n        { name: \"Foobarbar2501\", did: \"Translation: German\" },\r\n        { name: \"Feilz\", did: \"Translation: German\" },\r\n        { name: \"Skornett\", did: \"Translation: French\" },\r\n        { name: \"Vedmin_Studen\", did: \"Translation: Korean\" },\r\n        { name: \"Kenney.nl\", did: \"Some Icons\" },\r\n    ];\r\n</script>\r\n\r\n<div class=\"flex\">\r\n    <aside class=\"flex flex-direction-column gap-15 pad-20\">\r\n        <div class=\"flex align-items-center gap-20\">\r\n            <Button\r\n                on:click={() => window.goBack()}\r\n                type=\"button\"\r\n                text=\"🠔 Back\"\r\n                class=\"sm\"\r\n            />\r\n        </div>\r\n    </aside>\r\n    <main>\r\n        <div class=\"pad-20\" style=\"overflow: auto; height: 95vh;\">\r\n            <h2>Credits</h2>\r\n            <table>\r\n                <tbody>\r\n                    {#each credits as { name, did, url }, i}\r\n                        <tr>\r\n                            <td>{name}</td>\r\n                            <td>{did}</td>\r\n                            {#if url}\r\n                                <td\r\n                                    ><a\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\"\r\n                                        href={url}>{url}</a\r\n                                    ></td\r\n                                >\r\n                            {/if}\r\n                        </tr>\r\n                    {/each}\r\n                </tbody>\r\n            </table>\r\n            <p>\r\n                And huge thanks to the many others unnamed above who were\r\n                helpful to me during the process of creating this game!\r\n            </p>\r\n            <p>\r\n                A big thanks to Pixi.js for their fantastic renderer which\r\n                powers Spellmasons visually!\r\n            </p>\r\n            <h2>Inspiration</h2>\r\n            <p>\r\n                Spellmasons drew inspiration from a number of incredible indie\r\n                titles including: Nuclear Throne, Magicka, Into the Breach, and\r\n                Hoplite\r\n            </p>\r\n            <h2>Font Licenses: Forum / Playfair Display</h2>\r\n            <details>\r\n                <summary>SIL OPEN FONT LICENSE</summary>\r\n                <pre>\r\n                    Copyright (c) 2011, Denis Masharov <denis.masharov@gmail.com\r\n                        >,\r\nwith Reserved Font Name \"Forum\".\r\n\r\nThis Font Software is licensed under the SIL Open Font License, Version 1.1.\r\nThis license is copied below, and is also available with a FAQ at:\r\nhttp://scripts.sil.org/OFL\r\n\r\n\r\n-----------------------------------------------------------\r\nSIL OPEN FONT LICENSE Version 1.1 - 26 February 2007\r\n-----------------------------------------------------------\r\n\r\nPREAMBLE\r\nThe goals of the Open Font License (OFL) are to stimulate worldwide\r\ndevelopment of collaborative font projects, to support the font creation\r\nefforts of academic and linguistic communities, and to provide a free and\r\nopen framework in which fonts may be shared and improved in partnership\r\nwith others.\r\n\r\nThe OFL allows the licensed fonts to be used, studied, modified and\r\nredistributed freely as long as they are not sold by themselves. The\r\nfonts, including any derivative works, can be bundled, embedded, \r\nredistributed and/or sold with any software provided that any reserved\r\nnames are not used by derivative works. The fonts and derivatives,\r\nhowever, cannot be released under any other type of license. The\r\nrequirement for fonts to remain under this license does not apply\r\nto any document created using the fonts or their derivatives.\r\n\r\nDEFINITIONS\r\n\"Font Software\" refers to the set of files released by the Copyright\r\nHolder(s) under this license and clearly marked as such. This may\r\ninclude source files, build scripts and documentation.\r\n\r\n\"Reserved Font Name\" refers to any names specified as such after the\r\ncopyright statement(s).\r\n\r\n\"Original Version\" refers to the collection of Font Software components as\r\ndistributed by the Copyright Holder(s).\r\n\r\n\"Modified Version\" refers to any derivative made by adding to, deleting,\r\nor substituting -- in part or in whole -- any of the components of the\r\nOriginal Version, by changing formats or by porting the Font Software to a\r\nnew environment.\r\n\r\n\"Author\" refers to any designer, engineer, programmer, technical\r\nwriter or other person who contributed to the Font Software.\r\n\r\nPERMISSION & CONDITIONS\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of the Font Software, to use, study, copy, merge, embed, modify,\r\nredistribute, and sell modified and unmodified copies of the Font\r\nSoftware, subject to the following conditions:\r\n\r\n1) Neither the Font Software nor any of its individual components,\r\nin Original or Modified Versions, may be sold by itself.\r\n\r\n2) Original or Modified Versions of the Font Software may be bundled,\r\nredistributed and/or sold with any software, provided that each copy\r\ncontains the above copyright notice and this license. These can be\r\nincluded either as stand-alone text files, human-readable headers or\r\nin the appropriate machine-readable metadata fields within text or\r\nbinary files as long as those fields can be easily viewed by the user.\r\n\r\n3) No Modified Version of the Font Software may use the Reserved Font\r\nName(s) unless explicit written permission is granted by the corresponding\r\nCopyright Holder. This restriction only applies to the primary font name as\r\npresented to the users.\r\n\r\n4) The name(s) of the Copyright Holder(s) or the Author(s) of the Font\r\nSoftware shall not be used to promote, endorse or advertise any\r\nModified Version, except to acknowledge the contribution(s) of the\r\nCopyright Holder(s) and the Author(s) or with their explicit written\r\npermission.\r\n\r\n5) The Font Software, modified or unmodified, in part or in whole,\r\nmust be distributed entirely under this license, and must not be\r\ndistributed under any other license. The requirement for fonts to\r\nremain under this license does not apply to any document created\r\nusing the Font Software.\r\n\r\nTERMINATION\r\nThis license becomes null and void if any of the above conditions are\r\nnot met.\r\n\r\nDISCLAIMER\r\nTHE FONT SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT\r\nOF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE\r\nCOPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\nINCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL\r\nDAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\nFROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM\r\nOTHER DEALINGS IN THE FONT SOFTWARE.\r\n                </denis.masharov@gmail.com></pre>\r\n            </details>\r\n        </div>\r\n    </main>\r\n</div>\r\n\r\n<style>\r\n    div {\r\n        color: white;\r\n    }\r\n    /* Spacing between columns */\r\n    td {\r\n        padding-right: 15px;\r\n    }\r\n</style>\r\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","\r\nexport const SAVE_PREFIX = \"spellmasons-save-\";","export const OPTIONS = \"OPTIONS\";\r\nexport const MAGE_TYPE= \"MAGE_TYPE\";\r\nexport const LOAD_GAMES = \"LOAD\";\r\nexport const LOCALIZATION = \"LOCALIZATION\";\r\nexport const CREDITS = \"CREDITS\";\r\nexport const MODS = \"MODS\";\r\nexport const HELP = \"HELP\";\r\nexport const PLAY = \"PLAY\";\r\nexport const MULTIPLAYER_SERVER_CHOOSER = \"MULTIPLAYER_SERVER_CHOOSER\";\r\nexport const LANGUAGE = \"LANGUAGE\";\r\nexport const TODO = \"TODO\";","import { writable } from 'svelte/store';\r\n\r\nexport const lobbyPlayerList = writable([]);\r\nexport const connected = writable(false);\r\nexport const isInRoom = writable(false);\r\nexport const isConnecting = writable(false);\r\nexport const isDisconnecting = writable(false);\r\nexport function syncConnectedWithPieState() {\r\n    const _connected = window.isConnected()\r\n    connected.set(_connected);\r\n    if (!_connected) {\r\n        isInRoom.set(false);\r\n    }\r\n    isConnecting.set(false);\r\n    isDisconnecting.set(false);\r\n}\r\nglobalThis.syncConnectedWithPieState = syncConnectedWithPieState;\r\nglobalThis.setMenuIsInRoom = inRoom => isInRoom.set(inRoom);\r\nexport function disconnect() {\r\n    isDisconnecting.set(true);\r\n    window.intentionalDisconnect = true;\r\n    return window.pieDisconnect().then(syncConnectedWithPieState);\r\n}","<script>\r\n    import { get } from \"svelte/store\";\r\n    import Button from \"./Button.svelte\";\r\n    import { SAVE_PREFIX } from \"./globals.js\";\r\n    import { MULTIPLAYER_SERVER_CHOOSER, PLAY } from \"./routes\";\r\n    import { connected, isInRoom } from \"./stores\";\r\n    export let setRoute;\r\n    let saveFiles = [];\r\n    function getSaveFiles() {\r\n        saveFiles = Object.keys(localStorage)\r\n            // Get all localStorage that are save files\r\n            .filter((x) => x.includes(SAVE_PREFIX))\r\n            // Get the name that doesn't include the save prefix\r\n            .map((x) => x.split(SAVE_PREFIX).join(\"\"))\r\n            .map((saveFileName) => {\r\n                const [dateString, saveName] = saveFileName.split(\"-\");\r\n                const parsedDate = parseInt(dateString);\r\n                return {\r\n                    saveFileName,\r\n                    date: isNaN(parsedDate) ? 0 : parsedDate,\r\n                    displayName: isNaN(parsedDate)\r\n                        ? saveFileName\r\n                        : saveName !== \"\"\r\n                        ? saveName\r\n                        : new Date(parsedDate).toString(),\r\n                };\r\n            })\r\n            // Have most recent at the top\r\n            .sort((a, b) => b.date - a.date);\r\n    }\r\n    getSaveFiles();\r\n</script>\r\n\r\n<div class=\"flex\">\r\n    <aside>\r\n        <div class=\"flex flex-direction-column gap-15 pad-20\">\r\n            <div class=\"flex align-items-center gap-20\">\r\n                <Button\r\n                    on:click={() => {\r\n                        if (\r\n                            get(connected) &&\r\n                            get(isInRoom) &&\r\n                            !globalThis.player.lobbyReady\r\n                        ) {\r\n                            setRoute(MULTIPLAYER_SERVER_CHOOSER);\r\n                        } else {\r\n                            window.goBack();\r\n                        }\r\n                    }}\r\n                    type=\"button\"\r\n                    text=\"🠔 Back\"\r\n                    class=\"sm\"\r\n                />\r\n                <h1 class=\"aside-title\">\r\n                    {globalThis.i18n(\"Previous Games\")}\r\n                </h1>\r\n            </div>\r\n        </div>\r\n    </aside>\r\n\r\n    <main>\r\n        <div class=\"pad-20 flex flex-direction-column gap-15\">\r\n            {#each saveFiles as saveFile}\r\n                <div class=\"flex gap-15\">\r\n                    <Button\r\n                        on:click={() => window.load(saveFile.saveFileName)}\r\n                        type=\"button\"\r\n                        text={saveFile.displayName}\r\n                        style=\"min-width:300px; overflow:hidden;\"\r\n                    />\r\n                    <Button\r\n                        on:click={() => {\r\n                            window\r\n                                .deleteSave(saveFile.saveFileName)\r\n                                .then(() => {\r\n                                    getSaveFiles();\r\n                                });\r\n                        }}\r\n                        type=\"button\"\r\n                        text={\"X\"}\r\n                        style=\"width:65px\"\r\n                    />\r\n                </div>\r\n            {/each}\r\n        </div>\r\n    </main>\r\n</div>\r\n\r\n<style>\r\n    main {\r\n        max-height: 95vh;\r\n        overflow: auto;\r\n    }\r\n    aside {\r\n        border-right: 2px solid #efefef;\r\n        width: 300px;\r\n        /* Ensure that the options aside will become scrollable if the screen is too small */\r\n        overflow-y: auto;\r\n        /* Ensure it doesn't overlap with the border around the edges of the window */\r\n        max-height: 90vh;\r\n    }\r\n</style>\r\n","<script>\r\n    import Button from \"./Button.svelte\";\r\n    import IconLink from \"./IconLink.svelte\";\r\n</script>\r\n\r\n<div class=\"flex height100\">\r\n    <aside>\r\n        <div class=\"flex flex-direction-column gap-15 pad-20\">\r\n            <div class=\"flex align-items-center gap-20\">\r\n                <Button\r\n                    on:click={() => window.goBack()}\r\n                    type=\"button\"\r\n                    text=\"🠔 Back\"\r\n                    class=\"sm\"\r\n                />\r\n                <h1 class=\"aside-title\">{globalThis.i18n(\"Help\")}</h1>\r\n            </div>\r\n            <div class=\"flex flex-direction-column gap-15\">\r\n                <!-- <Button\r\n                    on:click={() => setOptionsRoute(AUDIO)}\r\n                    isActive={optionsRoute == AUDIO}\r\n                    type=\"button\"\r\n                    text=\"Audio\"\r\n                />\r\n                <Button\r\n                    on:click={() => setOptionsRoute(PLAYER_CONFIG)}\r\n                    isActive={optionsRoute == PLAYER_CONFIG}\r\n                    type=\"button\"\r\n                    text=\"Player Configuration\"\r\n                />\r\n                <Button\r\n                    on:click={() => setOptionsRoute(CONTROLS)}\r\n                    isActive={optionsRoute == CONTROLS}\r\n                    type=\"button\"\r\n                    text=\"Controls\"\r\n                />\r\n                <Button\r\n                    on:click={() => setOptionsRoute(EXTRAS)}\r\n                    isActive={optionsRoute == EXTRAS}\r\n                    type=\"button\"\r\n                    text=\"Extras\"\r\n                /> -->\r\n            </div>\r\n        </div>\r\n    </aside>\r\n\r\n    <main>\r\n        <div class=\"flex gap-15 height100\">\r\n            <div\r\n                class=\"pad-20 flex flex-direction-column gap-15 overflowyscroll\"\r\n                style=\"min-width:300px\"\r\n            >\r\n                <h1>Contact Me!</h1>\r\n                <IconLink\r\n                    src=\"ui/UI_Bird.png\"\r\n                    alt=\"Twitter @spellmasons\"\r\n                    width=\"24px\"\r\n                    href=\"https://twitter.com/spellmasons\"\r\n                    class=\"button-wrapper-bg-2\"\r\n                    text=\"@spellmasons\"\r\n                />\r\n                <h1>Join our Discord Community!</h1>\r\n                <IconLink\r\n                    src=\"ui/discord_logo.png\"\r\n                    alt=\"Spellmasons Discord https://discord.gg/q6sUCreHeJ\"\r\n                    width=\"24px\"\r\n                    href=\"https://discord.gg/q6sUCreHeJ\"\r\n                    class=\"button-wrapper-bg-2\"\r\n                    text=\"Discord\"\r\n                />\r\n                <h1>How to</h1>\r\n                {#each window.explainKeys || [] as name}\r\n                    <Button\r\n                        on:click={() => window.menuExplain(name, true)}\r\n                        type=\"button\"\r\n                        text={name}\r\n                    />\r\n                {/each}\r\n                <!-- {#if optionsRoute == AUDIO}\r\n                <div class=\"flex flex-direction-column gap-15\">\r\n                    Total Volume:\r\n                    <input\r\n                        type=\"range\"\r\n                        value={window.volume * 100}\r\n                        on:input={changeVolume}\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                    />\r\n                    Music Volume:\r\n                    <input\r\n                        type=\"range\"\r\n                        value={window.volumeMusic * 100}\r\n                        on:input={changeVolumeMusic}\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                    />\r\n                    Sound Effects Volume:\r\n                    <input\r\n                        type=\"range\"\r\n                        value={window.volumeGame * 100}\r\n                        on:input={changeVolumeGame}\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                    />\r\n                </div>\r\n            {:else if optionsRoute == PLAYER_CONFIG}\r\n                <PlayerConfig  {setRoute}/>\r\n            {:else if optionsRoute == CONTROLS}\r\n                <KeyMapping />\r\n            {:else if optionsRoute == EXTRAS}\r\n                <div>\r\n                    <Button\r\n                        on:click={() => {\r\n                            window.monitorFPS();\r\n                        }}\r\n                        text=\"Toggle FPS/Latency Monitor\"\r\n                    />\r\n                </div>\r\n            {/if} -->\r\n            </div>\r\n            <div id=\"explain-portal\" />\r\n        </div>\r\n    </main>\r\n</div>\r\n\r\n<style>\r\n    aside {\r\n        border-right: 2px solid #efefef;\r\n        width: 300px;\r\n    }\r\n    #explain-portal {\r\n        width: 100%;\r\n        height: 100vh;\r\n        display: flex;\r\n        align-content: center;\r\n    }\r\n</style>\r\n","<script>\r\n    export let isActive;\r\n    export let align;\r\n    let _class = \"\";\r\n    export { _class as class };\r\n</script>\r\n\r\n<button\r\n    class={`button-wrapper ${_class} ${isActive ? \"is-active\" : \"\"} ${\r\n        align !== undefined ? align : \"\"\r\n    }`}\r\n    on:click\r\n    {...$$restProps}\r\n>\r\n    <div>\r\n        <slot />\r\n    </div>\r\n</button>\r\n\r\n<style lang=\"scss\">\r\n    button.left > div {\r\n        justify-content: flex-start;\r\n    }\r\n    button > div {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n</style>\r\n","<script>\r\n    import { onMount, onDestroy } from \"svelte\";\r\n    function changeControl(key, index, code) {\r\n        globalThis.controlMap[activeKey][activeIndex] = code;\r\n        globalThis.persistControls();\r\n        forceRerender++;\r\n        // Clear active\r\n        setActive(\"\", 0);\r\n    }\r\n    function keydownListener(event) {\r\n        if (activeKey) {\r\n            if (globalThis.controlMap) {\r\n                // Allow rebinding any key except the Escape key\r\n                // since the Escape key has multiple uses and controls\r\n                // the menu back navigation\r\n                if (event.code !== \"Escape\") {\r\n                    changeControl(activeKey, activeIndex, event.code);\r\n                }\r\n            } else {\r\n                console.error(\"Cannot set key, no globalThis.controlMap\");\r\n            }\r\n        }\r\n    }\r\n    function mousedownListener(event) {\r\n        if (!globalThis.mouseButtonToKeyCode) {\r\n            console.error(\"mouseButtonToKeyCode is undefined\");\r\n        }\r\n        if (event.button !== undefined) {\r\n            const mouseButton = globalThis.mouseButtonToKeyCode(event.button);\r\n\r\n            if (activeKey) {\r\n                if (globalThis.controlMap) {\r\n                    if (\r\n                        event.button == 0 ||\r\n                        event.button == 1 ||\r\n                        event.button == 2\r\n                    ) {\r\n                        error = globalThis.i18n(\"mouseRebindError\");\r\n                    } else {\r\n                        changeControl(activeKey, activeIndex, mouseButton);\r\n                    }\r\n                } else {\r\n                    console.error(\"Cannot set key, no globalThis.controlMap\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    onMount(() => {\r\n        document.body.addEventListener(\"keydown\", keydownListener);\r\n        document.body.addEventListener(\"mousedown\", mousedownListener);\r\n    });\r\n\r\n    onDestroy(() => {\r\n        document.body.removeEventListener(\"keydown\", keydownListener);\r\n        document.body.removeEventListener(\"mousedown\", mousedownListener);\r\n    });\r\n    let activeKey = \"\";\r\n    let activeIndex = 0;\r\n    // forceRerender is needed because this component edits a global variable which svelte stay in\r\n    // sync with like other variables\r\n    let forceRerender = 0;\r\n    function setActive(key, index) {\r\n        activeKey = key;\r\n        activeIndex = index;\r\n        // Reset error\r\n        error = \"\";\r\n    }\r\n    let error = \"\";\r\n</script>\r\n\r\n<h2 class=\"error-inline\">&nbsp;{error}</h2>\r\n<table id=\"keymapping\">\r\n    {#key forceRerender}\r\n        <tr>\r\n            <td />\r\n            <td>Option 1</td>\r\n            <td>Option 2</td>\r\n            <td>Option 3</td>\r\n        </tr>\r\n        {#each Object.entries(globalThis.controlMap || {}) as [key, controls]}\r\n            <tr>\r\n                <td>\r\n                    {globalThis.i18n(key)}\r\n                </td>\r\n                {#each Object.assign([\"\", \"\", \"\"], controls) as control, index}\r\n                    <td\r\n                        ><button\r\n                            class=\"reassignKey\"\r\n                            on:click={() => setActive(key, index)}\r\n                        >\r\n                            {#if activeKey == key && activeIndex == index}\r\n                                {globalThis.i18n(\"reassign\")}\r\n                            {:else}\r\n                                {(control || \"\")\r\n                                    .split(\"Key\")\r\n                                    .join(\"\")\r\n                                    .split(\"Digit\")\r\n                                    .join(\"\")\r\n                                    .toLowerCase()}\r\n                            {/if}\r\n                        </button></td\r\n                    >\r\n                {/each}\r\n            </tr>\r\n        {/each}\r\n    {/key}\r\n</table>\r\n\r\n<style>\r\n    .reassignKey {\r\n        min-width: 200px;\r\n        min-height: 24px;\r\n    }\r\n</style>\r\n","<script>\r\n    import { onMount } from \"svelte\";\r\n    import { lobbyPlayerList } from \"./stores\";\r\n    import { MAGE_TYPE } from \"./routes\";\r\n    import Button from \"./Button.svelte\";\r\n    export let setRoute;\r\n    // storage ids from config.ts in Golems\r\n    let name = globalThis.storageGet(\"player-name\");\r\n    let color = `#${parseInt(globalThis.storageGet(\"player-color\")).toString(\r\n        16\r\n    )}`;\r\n    // let colorMagic = `#${parseInt(\r\n    //     globalThis.storageGet(\"player-color\")\r\n    // ).toString(16)}`;\r\n    const convertToHex = (cssColor) => parseInt(cssColor.slice(1), 16);\r\n    function sendConfig(color, colorMagic, name) {\r\n        window.configPlayer({\r\n            color: convertToHex(color),\r\n            colorMagic: convertToHex(colorMagic),\r\n            name,\r\n        });\r\n        // Update lobbyPlayerList\r\n        $lobbyPlayerList = globalThis.lobbyPlayerList;\r\n    }\r\n    onMount(() => {\r\n        // Temporary work around, since all self messages are handled immediately,\r\n        // the config is being overwritten when underworld sends SYNC_PLAYERS due to\r\n        // onClientConnected even tho this messages is processed after so I'm adding\r\n        // a delay; however, the real solution is to update wsPie to add a flag that\r\n        // says sendToSelfThroughServer so it doesn't handle it immediately\r\n        setTimeout(() => {\r\n            sendConfig(color, color, name);\r\n        }, 200);\r\n    });\r\n</script>\r\n\r\n<div class=\"flex gap-15 margin-bottom-15\">\r\n    <div class=\"flex flex-direction-column gap-15\">\r\n        <label for=\"player-name\">{globalThis.i18n(\"Player Name\")}</label>\r\n        <input\r\n            type=\"text\"\r\n            name=\"player-name\"\r\n            bind:value={name}\r\n            on:input={() => {\r\n                sendConfig(color, color, name);\r\n            }}\r\n        />\r\n    </div>\r\n    <div class=\"flex flex-direction-column gap-15\">\r\n        <label for=\"robe\">{globalThis.i18n(\"Robe Color\")}</label>\r\n        <input\r\n            type=\"color\"\r\n            name=\"robe\"\r\n            style=\"height:21px\"\r\n            bind:value={color}\r\n            on:blur={() => {\r\n                sendConfig(color, color, name);\r\n            }}\r\n        />\r\n    </div>\r\n    <!-- <div class=\"flex flex-direction-column gap-15\">\r\n        <Button\r\n            on:click={() => {\r\n                setRoute(MAGE_TYPE);\r\n            }}\r\n            text=\"Choose Class\"\r\n            title=\"Choose a starting class\"\r\n            style=\"flex:0 0 0;\"\r\n        />\r\n    </div> -->\r\n    <!-- <div class=\"flex flex-direction-column gap-15\">\r\n        <label for=\"magic color\">{globalThis.i18n(\"Magic Color\")}</label>\r\n        <input\r\n            type=\"color\"\r\n            name=\"magic color\"\r\n            bind:value={colorMagic}\r\n            on:blur={() => {\r\n                sendConfig(color, colorMagic, name);\r\n            }}\r\n        />\r\n    </div> -->\r\n</div>\r\n","<script>\r\n    import Button from \"./Button.svelte\";\r\n    import Icon from \"./IconSlot.svelte\";\r\n    import { LOCALIZATION } from \"./routes\";\r\n    import KeyMapping from \"./KeyMapping.svelte\";\r\n    const CONTROLS = \"KEY_MAPPING\";\r\n    const EXTRAS = \"EXTRAS\";\r\n    import PlayerConfig from \"./PlayerConfig.svelte\";\r\n    const PLAYER_CONFIG = \"PLAYER_CONFIG\";\r\n    export let setRoute;\r\n\r\n    const AUDIO = \"AUDIO\";\r\n    const VIDEO = \"VIDEO\";\r\n    let optionsRoute = AUDIO;\r\n    function setOptionsRoute(_optionsRoute) {\r\n        optionsRoute = _optionsRoute;\r\n    }\r\n    function changeVolume(ev) {\r\n        window.changeVolume(ev.target.value / 100);\r\n    }\r\n    function changeVolumeMusic(ev) {\r\n        window.changeVolumeMusic(ev.target.value / 100);\r\n    }\r\n    function changeVolumeGame(ev) {\r\n        window.changeVolumeGame(ev.target.value / 100);\r\n    }\r\n    let cinematicCameraEnabled = globalThis.cinematicCameraEnabled;\r\n    function setCinematicCamera(ev) {\r\n        globalThis.setCinematicCameraEnabled(ev.target.checked);\r\n        cinematicCameraEnabled = globalThis.cinematicCameraEnabled;\r\n    }\r\n    let UIEasyOnTheEyes = globalThis.UIEasyOnTheEyes;\r\n    function setUIEasyOnTheEyes(ev) {\r\n        globalThis.UIEasyOnTheEyes = ev.target.checked;\r\n        UIEasyOnTheEyes = globalThis.UIEasyOnTheEyes;\r\n        globalThis.setOption(\"UIEasyOnTheEyes\", globalThis.UIEasyOnTheEyes);\r\n        Jprompt({\r\n            text: \"Changes will take effect after the game is restarted.\",\r\n            yesText: \"Okay\",\r\n            forceShow: true,\r\n        });\r\n    }\r\n    let limitParticleEmitters = globalThis.limitParticleEmitters;\r\n    function setlimitParticleEmitters(number) {\r\n        // -1 means no limit, any other number is the max of particle emitters allowed\r\n        globalThis.limitParticleEmitters = number;\r\n        limitParticleEmitters = globalThis.limitParticleEmitters;\r\n        globalThis.setOption(\r\n            \"limitParticleEmitters\",\r\n            globalThis.limitParticleEmitters\r\n        );\r\n    }\r\n    let storedZoom = NaN;\r\n    if (globalThis.STORAGE_ID_UI_ZOOM) {\r\n        storedZoom = parseFloat(\r\n            globalThis.storageGet(globalThis.STORAGE_ID_UI_ZOOM)\r\n        );\r\n    } else {\r\n        console.error(\"globalThis.STORAGE_ID_UI_ZOOM is undefined\");\r\n    }\r\n    let zoomAmount = isNaN(storedZoom) ? 1 : storedZoom;\r\n    let forceRerender = 0;\r\n</script>\r\n\r\n{#key forceRerender}\r\n    <div class=\"flex\">\r\n        <aside>\r\n            <div class=\"flex flex-direction-column gap-15 pad-20\">\r\n                <div class=\"flex align-items-center gap-20\">\r\n                    <Button\r\n                        on:click={() => window.goBack()}\r\n                        type=\"button\"\r\n                        text=\"🠔 Back\"\r\n                        class=\"sm\"\r\n                    />\r\n                    <h1 class=\"aside-title\">{globalThis.i18n(\"Settings\")}</h1>\r\n                </div>\r\n                <div class=\"flex flex-direction-column gap-15\">\r\n                    <Button\r\n                        on:click={() => setOptionsRoute(AUDIO)}\r\n                        isActive={optionsRoute == AUDIO}\r\n                        type=\"button\"\r\n                        text={`🔊 ${globalThis.i18n(\"Audio\")}`}\r\n                        style=\"text-align:left\"\r\n                        doLocalizeText={false}\r\n                    />\r\n                    <Button\r\n                        on:click={() => setOptionsRoute(VIDEO)}\r\n                        isActive={optionsRoute == VIDEO}\r\n                        type=\"button\"\r\n                        text={`🖥️ ${globalThis.i18n(\"Video\")}`}\r\n                        style=\"text-align:left\"\r\n                        doLocalizeText={false}\r\n                    />\r\n                    <Button\r\n                        on:click={() => setOptionsRoute(PLAYER_CONFIG)}\r\n                        isActive={optionsRoute == PLAYER_CONFIG}\r\n                        type=\"button\"\r\n                        text={`🧙 ${globalThis.i18n(\"Player\")}`}\r\n                        style=\"text-align:left\"\r\n                        doLocalizeText={false}\r\n                    />\r\n                    <Button\r\n                        on:click={() => setOptionsRoute(CONTROLS)}\r\n                        isActive={optionsRoute == CONTROLS}\r\n                        type=\"button\"\r\n                        text={`⌨️ ${globalThis.i18n(\"Controls\")}`}\r\n                        style=\"text-align:left\"\r\n                        doLocalizeText={false}\r\n                    />\r\n                    {#if globalThis.skipTutorial && globalThis.isTutorialComplete !== undefined && !globalThis.isTutorialComplete()}\r\n                        <Button\r\n                            on:click={() => {\r\n                                globalThis.skipTutorial();\r\n                            }}\r\n                            text=\"Skip Tutorial\"\r\n                            style=\"text-align:left\"\r\n                        />\r\n                    {/if}\r\n                    <Button\r\n                        on:click={() => globalThis.resetTutorial()}\r\n                        type=\"button\"\r\n                        text={`❓ ${globalThis.i18n(\"Reset Tutorial\")}`}\r\n                        style=\"text-align:left\"\r\n                        doLocalizeText={false}\r\n                    />\r\n                    <Icon\r\n                        on:click={() => {\r\n                            setRoute(LOCALIZATION);\r\n                        }}\r\n                        class=\"button-wrapper-bg-2\"\r\n                        align=\"left\"\r\n                    >\r\n                        <img\r\n                            src=\"ui/localizationIcon.png\"\r\n                            alt=\"language options\"\r\n                            width=\"24\"\r\n                            height=\"24\"\r\n                            style=\"transform: scale(1.4);\"\r\n                        />\r\n                        &nbsp; &nbsp;\r\n                        {globalThis.i18n(\"Language\")}\r\n                    </Icon>\r\n                </div>\r\n            </div>\r\n            <button\r\n                id=\"devSettings\"\r\n                on:click={() => setOptionsRoute(EXTRAS)}\r\n                isActive={optionsRoute == EXTRAS}\r\n                type=\"button\">Developer Settings</button\r\n            >\r\n        </aside>\r\n\r\n        <main>\r\n            <div class=\"pad-20\">\r\n                {#if optionsRoute == AUDIO}\r\n                    <div class=\"flex flex-direction-column gap-15\">\r\n                        {globalThis.i18n(\"Total Volume\")}\r\n                        <input\r\n                            type=\"range\"\r\n                            value={window.volume * 100}\r\n                            on:input={changeVolume}\r\n                            min=\"0\"\r\n                            max=\"100\"\r\n                        />\r\n                        {globalThis.i18n(\"Music Volume\")}\r\n                        <input\r\n                            type=\"range\"\r\n                            value={window.volumeMusic * 100}\r\n                            on:input={changeVolumeMusic}\r\n                            min=\"0\"\r\n                            max=\"100\"\r\n                        />\r\n                        {globalThis.i18n(\"Sound Effects Volume\")}\r\n                        <input\r\n                            type=\"range\"\r\n                            value={window.volumeGame * 100}\r\n                            on:input={changeVolumeGame}\r\n                            min=\"0\"\r\n                            max=\"100\"\r\n                        />\r\n                        <Button\r\n                            on:click={() => window.playNextSong()}\r\n                            text=\"Play next song\"\r\n                        />\r\n                    </div>\r\n                {:else if optionsRoute == VIDEO}\r\n                    <div class=\"flex flex-direction-column gap-15\">\r\n                        <Button\r\n                            on:click={() => {\r\n                                if (globalThis.isElectron) {\r\n                                    globalThis.electronSettings.setFullscreen(\r\n                                        true\r\n                                    );\r\n                                } else {\r\n                                    document.body\r\n                                        .requestFullscreen()\r\n                                        .catch((err) => {\r\n                                            console.error(\r\n                                                `Error attempting to enable fullscreen mode: ${err.message} (${err.name})`\r\n                                            );\r\n                                        });\r\n                                }\r\n                            }}\r\n                            text=\"Set Fullscreen\"\r\n                        />\r\n                        <Button\r\n                            on:click={() => {\r\n                                if (globalThis.isElectron) {\r\n                                    globalThis.electronSettings.setFullscreen(\r\n                                        false\r\n                                    );\r\n                                } else {\r\n                                    document.exitFullscreen();\r\n                                }\r\n                            }}\r\n                            text=\"Set Windowed Mode\"\r\n                        />\r\n                        <label>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                bind:checked={cinematicCameraEnabled}\r\n                                on:click={setCinematicCamera}\r\n                            />\r\n                            {globalThis.i18n(\"Enable Cinematic Camera\")}\r\n                        </label>\r\n                        <label>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                bind:checked={UIEasyOnTheEyes}\r\n                                on:click={setUIEasyOnTheEyes}\r\n                            />\r\n                            {globalThis.i18n(\r\n                                \"Enable less bright background colors\"\r\n                            )}\r\n                        </label>\r\n                        <h2>\r\n                            {globalThis.i18n(\"Performance\")}\r\n                        </h2>\r\n                        <div>\r\n                            {globalThis.i18n(\"Particle Emitters\")}\r\n                            <Button\r\n                                on:click={() => {\r\n                                    setlimitParticleEmitters(0);\r\n                                    forceRerender += 1;\r\n                                }}\r\n                                isActive={globalThis.limitParticleEmitters == 0}\r\n                                text=\"Off\"\r\n                            />\r\n                            <Button\r\n                                on:click={() => {\r\n                                    setlimitParticleEmitters(5);\r\n                                    forceRerender += 1;\r\n                                }}\r\n                                isActive={globalThis.limitParticleEmitters == 5}\r\n                                text=\"Low\"\r\n                            />\r\n                            <Button\r\n                                on:click={() => {\r\n                                    setlimitParticleEmitters(-1);\r\n                                    forceRerender += 1;\r\n                                }}\r\n                                isActive={globalThis.limitParticleEmitters ==\r\n                                    -1}\r\n                                text=\"On\"\r\n                            />\r\n                        </div>\r\n                        {#if globalThis.isElectron}\r\n                            {globalThis.i18n(\"UI Scale\")}: {zoomAmount}\r\n                            <div class=\"flex gap-15\">\r\n                                <Button\r\n                                    on:click={() => {\r\n                                        zoomAmount -= 0.1;\r\n                                        // Round to 1 decimal point to protect against floating point errors\r\n                                        zoomAmount =\r\n                                            Math.round(zoomAmount * 10) / 10;\r\n                                        globalThis.storageSet(\r\n                                            globalThis.STORAGE_ID_UI_ZOOM,\r\n                                            zoomAmount\r\n                                        );\r\n                                        globalThis.electronSettings.setUIZoom(\r\n                                            zoomAmount\r\n                                        );\r\n                                    }}\r\n                                    text=\"Smaller\"\r\n                                />\r\n                                <Button\r\n                                    on:click={() => {\r\n                                        zoomAmount += 0.1;\r\n                                        // Round to 1 decimal point to protect against floating point errors\r\n                                        zoomAmount =\r\n                                            Math.round(zoomAmount * 10) / 10;\r\n                                        globalThis.storageSet(\r\n                                            globalThis.STORAGE_ID_UI_ZOOM,\r\n                                            zoomAmount\r\n                                        );\r\n                                        globalThis.electronSettings.setUIZoom(\r\n                                            zoomAmount\r\n                                        );\r\n                                    }}\r\n                                    text=\"Bigger\"\r\n                                />\r\n                            </div>\r\n                        {/if}\r\n                    </div>\r\n                {:else if optionsRoute == PLAYER_CONFIG}\r\n                    <PlayerConfig {setRoute} />\r\n                {:else if optionsRoute == CONTROLS}\r\n                    <KeyMapping />\r\n                {:else if optionsRoute == EXTRAS}\r\n                    <div class=\"flex flex-direction-column gap-15\">\r\n                        <Button\r\n                            on:click={() => {\r\n                                window.monitorFPS();\r\n                            }}\r\n                            text=\"Toggle FPS / Latency Monitor\"\r\n                        />\r\n                        <Button\r\n                            on:click={() => {\r\n                                window.electronSettings.toggleDevTools();\r\n                            }}\r\n                            text=\"Toggle Console\"\r\n                        />\r\n                    </div>\r\n                {/if}\r\n            </div>\r\n        </main>\r\n    </div>\r\n{/key}\r\n\r\n<style>\r\n    #devSettings {\r\n        position: absolute;\r\n        bottom: 28px;\r\n        left: 28px;\r\n        background: none;\r\n        border: none;\r\n        padding: 0;\r\n        font: inherit;\r\n        cursor: pointer;\r\n        color: #262626;\r\n        outline: inherit;\r\n    }\r\n    aside {\r\n        border-right: 2px solid #efefef;\r\n        width: 300px;\r\n        /* Ensure that the options aside will become scrollable if the screen is too small */\r\n        overflow-y: auto;\r\n        /* Ensure it doesn't overlap with the border around the edges of the window */\r\n        max-height: 90vh;\r\n    }\r\n</style>\r\n","<script>\r\n    import Button from \"./Button.svelte\";\r\n    import Icon from \"./IconSlot.svelte\";\r\n    import IconLink from \"./IconLink.svelte\";\r\n    import {\r\n        HELP,\r\n        CREDITS,\r\n        OPTIONS,\r\n        MULTIPLAYER_SERVER_CHOOSER,\r\n        LOCALIZATION,\r\n        LOAD_GAMES,\r\n        MODS,\r\n    } from \"./routes\";\r\n    import {\r\n        syncConnectedWithPieState,\r\n        disconnect,\r\n        connected,\r\n        isInRoom,\r\n    } from \"./stores\";\r\n    import { SAVE_PREFIX } from \"./globals.js\";\r\n    export let setRoute;\r\n    export let inGame;\r\n    if (globalThis.STORAGE_ID_UI_ZOOM) {\r\n        // Restore ui zoom from storage\r\n        const storedZoom = parseFloat(\r\n            globalThis.storageGet(globalThis.STORAGE_ID_UI_ZOOM)\r\n        );\r\n        if (storedZoom) {\r\n            globalThis.electronSettings.setUIZoom(storedZoom);\r\n        }\r\n    } else {\r\n        console.error(\"globalThis.STORAGE_ID_UI_ZOOM is undefined\");\r\n    }\r\n    function isConnectedToSinglePlayer() {\r\n        // 'solomode_client_id' comes from pieclient's solo mode\r\n        return globalThis.clientId == \"solomode_client_id\";\r\n    }\r\n    function chooseSingleplayer() {\r\n        // Start music on button click to get past Firefox permissions\r\n        window.playMusic();\r\n        // Connect to solo\r\n        window.startSingleplayer(1).then(() => {\r\n            syncConnectedWithPieState();\r\n        });\r\n    }\r\n    function chooseMultiplayer() {\r\n        // Start music on button click to get past Firefox permissions\r\n        window.playMusic();\r\n        if (isConnectedToSinglePlayer()) {\r\n            window.intentionalDisconnect = true;\r\n            disconnect();\r\n        }\r\n        setRoute(MULTIPLAYER_SERVER_CHOOSER);\r\n    }\r\n\r\n    async function exitGame() {\r\n        const doQuit = await Jprompt({\r\n            text: \"Are you sure you want to quit to Main Menu?\",\r\n            yesText: \"Quit\",\r\n            noBtnText: \"Return to Game\",\r\n            noBtnKey: \"Escape\",\r\n            // Ensure it shows up over menu z-index\r\n            forceShow: true,\r\n        });\r\n        if (doQuit) {\r\n            // Clear game and pieUrl searchParams on quit\r\n            const url = new URL(location.href);\r\n            url.searchParams.delete(\"game\");\r\n            url.searchParams.delete(\"pieUrl\");\r\n            window.history.pushState(null, null, url);\r\n            window.exitCurrentGame().then(syncConnectedWithPieState);\r\n        }\r\n    }\r\n    function resumeGame() {\r\n        return window.closeMenu();\r\n    }\r\n    async function doSave() {\r\n        const fileName = await JtextPrompt({\r\n            text: \"Name your save file\",\r\n            forceShow: true,\r\n            yesText: \"Okay\",\r\n        });\r\n        // Replace fileName \"-\" with spaces because dashes are used to delineate information in the save file\r\n        const saveName = `${Date.now().toString()}-${fileName\r\n            .split(\"-\")\r\n            .join(\" \")}`;\r\n        window.save(saveName).then((errMsg) => {\r\n            if (errMsg) {\r\n                Jprompt({ text: errMsg, yesText: \"Okay\", forceShow: true });\r\n            }\r\n        });\r\n    }\r\n    const quicksave_exists = !!globalThis.storageGet(\r\n        `${globalThis.savePrefix}${globalThis.quicksaveKey}`\r\n    );\r\n    // function saveGame() {\r\n    //     const fileName = prompt(\"Name your save file\");\r\n    //     console.log(\"saving...\", fileName);\r\n    //     window.save(fileName);\r\n    // }\r\n    // Since globalThis.isTutorialComplete is outside of the svelte\r\n    // context, we have to forceRerender the tutorialSkip button after\r\n    // it is pressed so it will recheck isTutorialComplete to decide\r\n    // if it should render or not.\r\n    let forceRerenderTutorialSkip = 0;\r\n</script>\r\n\r\n<div id=\"corner-left\" class=\"flex gap\" style=\"flex-direction:column;\">\r\n    <Button\r\n        on:click={() => setRoute(HELP)}\r\n        text=\"Help\"\r\n        iconPath=\"question.png\"\r\n    />\r\n</div>\r\n<div id=\"corner\" class=\"flex gap\" style=\"flex-direction:column;\">\r\n    <Button\r\n        on:click={() => setRoute(MODS)}\r\n        text=\"Mods\"\r\n        class=\"justify-center\"\r\n    />\r\n    <Button\r\n        on:click={() => setRoute(CREDITS)}\r\n        text=\"Credits\"\r\n        class=\"justify-center\"\r\n    />\r\n    <div class=\"flex gap\">\r\n        <IconLink\r\n            src=\"ui/UI_Bird.png\"\r\n            alt=\"Twitter @spellmasons\"\r\n            width=\"24px\"\r\n            href=\"https://twitter.com/spellmasons\"\r\n            class=\"button-wrapper-bg-2\"\r\n        />\r\n        <IconLink\r\n            src=\"ui/discord_logo.png\"\r\n            alt=\"Spellmasons Discord https://discord.gg/q6sUCreHeJ\"\r\n            width=\"24px\"\r\n            href=\"https://discord.gg/q6sUCreHeJ\"\r\n            class=\"button-wrapper-bg-2\"\r\n        />\r\n        <Icon\r\n            on:click={() => {\r\n                setRoute(LOCALIZATION);\r\n            }}\r\n            class=\"button-wrapper-bg-2\"\r\n        >\r\n            <img\r\n                src=\"ui/localizationIcon.png\"\r\n                alt=\"language options\"\r\n                width=\"24\"\r\n                height=\"24\"\r\n                style=\"transform: scale(1.4);\"\r\n            />\r\n        </Icon>\r\n        <!-- <Icon src=\"ui/UI_Bug.png\" alt=\"Report Issue or Bug\" /> -->\r\n    </div>\r\n</div>\r\n\r\n{#if inGame}\r\n    <div class=\"list\">\r\n        {#if !isConnectedToSinglePlayer() && $connected && $isInRoom && !globalThis.player.lobbyReady && globalThis.numberOfHotseatPlayers == 1}\r\n            <!--\r\n                Handle special case where if the player has joined a game\r\n                but is still in the lobby because they haven't readied up yet, resumeGame\r\n                will do nothing because they cannot close the menu yet, so there must be a button\r\n                to bring them back to the lobby\r\n                ---\r\n                Note: If numberOfHotseatPlayers is > 1, this means the client IS playing hotseat multiplayer\r\n                in which case we should NOT show the \"Back to Lobby\" button because they would get stuck in the lobby\r\n            -->\r\n            <Button\r\n                on:click={() => {\r\n                    setRoute(MULTIPLAYER_SERVER_CHOOSER);\r\n                }}\r\n                text=\"Back to Lobby\"\r\n            />\r\n        {:else}\r\n            <Button\r\n                on:click={() => {\r\n                    const suceeded = resumeGame();\r\n                    if (!suceeded) {\r\n                        console.warn(\r\n                            \"Could not resume game, defaulting to multiplayer lobby\"\r\n                        );\r\n                        setRoute(MULTIPLAYER_SERVER_CHOOSER);\r\n                    }\r\n                }}\r\n                text=\"Resume Game\"\r\n                iconPath=\"forward.png\"\r\n            />\r\n            <Button on:click={doSave} text=\"Save\" iconPath=\"save.png\" />\r\n        {/if}\r\n        {#key forceRerenderTutorialSkip}\r\n            {#if globalThis.skipTutorial && globalThis.isTutorialComplete !== undefined && !globalThis.isTutorialComplete()}\r\n                <Button\r\n                    on:click={() => {\r\n                        globalThis.skipTutorial().then(() => {\r\n                            forceRerenderTutorialSkip++;\r\n                        });\r\n                    }}\r\n                    text=\"Skip Tutorial\"\r\n                />\r\n            {/if}\r\n        {/key}\r\n        <!-- Multiplayer games may only be loaded from the lobby screen so that a player cannot overwrite an ongoing game -->\r\n        {#if isConnectedToSinglePlayer()}\r\n            <Button\r\n                on:click={() => setRoute(LOAD_GAMES)}\r\n                text=\"Load\"\r\n                iconPath=\"open.png\"\r\n            />\r\n        {/if}\r\n        <Button\r\n            on:click={() => setRoute(OPTIONS)}\r\n            text=\"Settings\"\r\n            iconPath=\"gear.png\"\r\n        />\r\n        <Button\r\n            on:click={exitGame}\r\n            text=\"Quit to Main Menu\"\r\n            iconPath=\"exitLeft.png\"\r\n        />\r\n    </div>\r\n{:else}\r\n    {#await window.setupPixiPromise}\r\n        loading assets...\r\n    {:then}\r\n        <div class=\"list\">\r\n            <!-- For now, hide \"Resume Last Run\" button because it'll still say it even after you die which could be confusing\r\n            to players that would expect to start a new run.  This is a UX issue and a better solution should be found if I want\r\n        to make resuming a quicksave easier it shouldn't conflict with the core experience of dying and starting a new run -->\r\n            <!-- {#if quicksave_exists}\r\n                <Button\r\n                    on:click={() => {\r\n                        globalThis.load(globalThis.quicksaveKey);\r\n                    }}\r\n                    text=\"Resume Last Run\"\r\n                    iconPath=\"forward.png\"\r\n                />\r\n            {/if} -->\r\n            <Button\r\n                on:click={chooseSingleplayer}\r\n                text=\"New Run\"\r\n                iconPath=\"singleplayer.png\"\r\n            />\r\n            <Button\r\n                on:click={chooseMultiplayer}\r\n                text=\"Multiplayer\"\r\n                iconPath=\"massiveMultiplayer.png\"\r\n            />\r\n            <Button\r\n                on:click={() => setRoute(LOAD_GAMES)}\r\n                text=\"Load\"\r\n                iconPath=\"open.png\"\r\n            />\r\n            <Button\r\n                on:click={() => setRoute(OPTIONS)}\r\n                text=\"Settings\"\r\n                iconPath=\"gear.png\"\r\n            />\r\n            {#if globalThis.isElectron}\r\n                <Button\r\n                    on:click={() => {\r\n                        window.fullyExitGame();\r\n                    }}\r\n                    text=\"Quit Game\"\r\n                    iconPath=\"door.png\"\r\n                />\r\n            {/if}\r\n        </div>\r\n        <br />\r\n    {:catch}\r\n        <p style=\"color: red\">Something went wrong loading assets</p>\r\n    {/await}\r\n{/if}\r\n\r\n<style>\r\n    #corner {\r\n        position: absolute;\r\n        bottom: 22px;\r\n        right: 24px;\r\n    }\r\n    #corner-left {\r\n        position: absolute;\r\n        bottom: 22px;\r\n        left: 24px;\r\n    }\r\n    .gap {\r\n        gap: 15px;\r\n    }\r\n    .list {\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin: 0 auto;\r\n    }\r\n</style>\r\n","<script>\r\n    import Button from \"./Button.svelte\";\r\n    export const languages = globalThis.getSupportedLanguages();\r\n    let currentLanguageCode = globalThis.getChosenLanguageCode();\r\n</script>\r\n\r\n<div class=\"flex\">\r\n    <aside>\r\n        <div class=\"flex flex-direction-column gap-15 pad-20\">\r\n            <div class=\"align-items-center gap-20\">\r\n                <Button\r\n                    on:click={() => window.goBack()}\r\n                    type=\"button\"\r\n                    text=\"🠔 Back\"\r\n                    class=\"sm\"\r\n                />\r\n                <h1 class=\"aside-title\">{globalThis.i18n(\"Localization\")}</h1>\r\n            </div>\r\n        </div>\r\n    </aside>\r\n\r\n    <main>\r\n        <div class=\"pad-20 flex flex-wrap gap-15\">\r\n            {#each languages as { language, code }, i}\r\n                <Button\r\n                    text={language}\r\n                    isActive={currentLanguageCode == code}\r\n                    doLocalizeText={false}\r\n                    style={\"max-width:150px\"}\r\n                    on:click={() => {\r\n                        globalThis.setLanguage(code, true);\r\n                        currentLanguageCode = code;\r\n                        window.goBack();\r\n                    }}\r\n                />\r\n            {/each}\r\n        </div>\r\n    </main>\r\n</div>\r\n\r\n<style>\r\n    aside {\r\n        border-right: 2px solid #efefef;\r\n        width: 300px;\r\n    }\r\n</style>\r\n","<script>\r\n    import Button from \"./Button.svelte\";\r\n</script>\r\n\r\n<h1>This page is still being built</h1>\r\n\r\n<Button\r\n    on:click={() => window.goBack()}\r\n    type=\"button\"\r\n    text=\"🠔 Back\"\r\n    class=\"sm\"\r\n/>\r\n\r\n<style>\r\n    h1 {\r\n        color: white;\r\n    }\r\n</style>\r\n","<script>\r\n    import { onMount, onDestroy } from \"svelte\";\r\n    import Button from \"./Button.svelte\";\r\n    import PlayerConfig from \"./PlayerConfig.svelte\";\r\n    import { lobbyPlayerList } from \"./stores\";\r\n    import { LOAD_GAMES, MODS } from \"./routes\";\r\n    export let setRoute;\r\n    let intervalId;\r\n    onMount(() => {\r\n        setInterval(() => {\r\n            // Update lobbyPlayerList\r\n            $lobbyPlayerList = globalThis.lobbyPlayerList;\r\n        }, 500);\r\n    });\r\n    onDestroy(() => {\r\n        clearInterval(intervalId);\r\n    });\r\n    let forceRerender = 0;\r\n</script>\r\n\r\n<h1>{globalThis.i18n(\"Game Lobby\")}</h1>\r\n<PlayerConfig {setRoute} />\r\n<div class=\"flex gap-15 flex-direction-column\">\r\n    {#key forceRerender}\r\n        <Button\r\n            on:click={() => {\r\n                globalThis.configPlayer({ lobbyReady: true });\r\n                forceRerender++;\r\n            }}\r\n            type=\"button\"\r\n            text=\"Ready\"\r\n            class=\"sm\"\r\n        />\r\n    {/key}\r\n    <h2>{globalThis.i18n(\"Difficulty\")}</h2>\r\n    <div class=\"flex gap-15\">\r\n        <Button\r\n            on:click={() => {\r\n                globalThis.setDifficulty(\"\");\r\n            }}\r\n            text=\"Normal\"\r\n            disabled={$lobbyPlayerList[0]?.clientId != globalThis.clientId}\r\n            style=\"flex:0 0 0;\"\r\n            isActive={globalThis.devUnderworld.gameMode == \"\"}\r\n        />\r\n        <Button\r\n            on:click={() => {\r\n                globalThis.setDifficulty(\"hard\");\r\n            }}\r\n            text=\"Hard\"\r\n            disabled={$lobbyPlayerList[0]?.clientId != globalThis.clientId}\r\n            style=\"flex:0 0 0;\"\r\n            isActive={globalThis.devUnderworld.gameMode == \"hard\"}\r\n        />\r\n        <Button\r\n            on:click={() => {\r\n                globalThis.setDifficulty(\"impossible\");\r\n            }}\r\n            text=\"Impossible\"\r\n            disabled={$lobbyPlayerList[0]?.clientId != globalThis.clientId}\r\n            style=\"flex:0 0 0;\"\r\n            isActive={globalThis.devUnderworld.gameMode == \"impossible\"}\r\n        />\r\n    </div>\r\n    <h2>{globalThis.i18n(\"Controls\")}</h2>\r\n    <div class=\"flex gap-15\">\r\n        <Button\r\n            on:click={() => setRoute(LOAD_GAMES)}\r\n            text=\"Load Saved Game\"\r\n            iconPath=\"open.png\"\r\n            disabled={$lobbyPlayerList[0]?.clientId != globalThis.clientId}\r\n            title=\"Only the host may Load a saved game for a multiplayer lobby\"\r\n            style=\"flex:0 0 0;\"\r\n        />\r\n        <Button\r\n            on:click={() => setRoute(MODS)}\r\n            text=\"Mods\"\r\n            class=\"justify-center sm\"\r\n            disabled={$lobbyPlayerList[0]?.clientId != globalThis.clientId}\r\n            title=\"Only the host may set mods\"\r\n        />\r\n    </div>\r\n    <h2>{globalThis.i18n(\"Players\")}</h2>\r\n    <table id=\"lobby-player-list\">\r\n        <thead>\r\n            <tr />\r\n        </thead>\r\n        <tbody>\r\n            {#each $lobbyPlayerList.sort((a, _b) => {\r\n                // Sort self to the top\r\n                if (a === globalThis.player) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            }) as { name, status, clientId, clientConnected, color, ready }}\r\n                <tr>\r\n                    <td>{name}</td>\r\n                    <td>{status}</td>\r\n                    <td\r\n                        class=\"lobby-player-color\"\r\n                        style={`background-color:${color};`}\r\n                    />\r\n                    <td>\r\n                        {ready}\r\n                    </td>\r\n                    {#if !clientConnected}\r\n                        <td>\r\n                            <Button\r\n                                on:click={() => {\r\n                                    window.pieInhabitPlayer(clientId);\r\n                                }}\r\n                                type=\"button\"\r\n                                text=\"Join Game As Player\"\r\n                            />\r\n                        </td>\r\n                    {/if}\r\n                </tr>\r\n            {/each}\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n<style>\r\n    #lobby-player-list {\r\n        min-width: 500px;\r\n    }\r\n    .lobby-player-color {\r\n        width: 20px;\r\n        height: 18px;\r\n    }\r\n    h2 {\r\n        margin: 0;\r\n    }\r\n</style>\r\n","<div>No Community Servers available at this time.</div>\r\n<br />\r\n<div>\r\n    You can still play on a custom server or host your own.\r\n    <a target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/8CTbL38eCvk\"\r\n        >How to host your own Spellmasons Server</a\r\n    >\r\n</div>\r\n<div>\r\n    Please check the\r\n    <a target=\"_blank\" rel=\"noreferrer\" href=\"https://discord.gg/q6sUCreHeJ\">\r\n        Discord\r\n    </a>\r\n    for more information.\r\n</div>\r\n","<script>\r\n    import { onMount } from \"svelte\";\r\n    // storage ids from config.ts in Golems\r\n    export let index;\r\n    export let name;\r\n    let color = `#${parseInt(globalThis.storageGet(\"player-color\")).toString(\r\n        16\r\n    )}`;\r\n    // let colorMagic = `#${parseInt(\r\n    //     globalThis.storageGet(\"player-color\")\r\n    // ).toString(16)}`;\r\n    const convertToHex = (cssColor) => parseInt(cssColor.slice(1), 16);\r\n    function sendConfig(color, colorMagic, name) {\r\n        globalThis.hotseatPlayerConfig[index] = {\r\n            color: convertToHex(color),\r\n            colorMagic: convertToHex(colorMagic),\r\n            name,\r\n        };\r\n    }\r\n    onMount(() => {\r\n        // Temporary work around, since all self messages are handled immediately,\r\n        // the config is being overwritten when underworld sends SYNC_PLAYERS due to\r\n        // onClientConnected even tho this messages is processed after so I'm adding\r\n        // a delay; however, the real solution is to update wsPie to add a flag that\r\n        // says sendToSelfThroughServer so it doesn't handle it immediately\r\n        setTimeout(() => {\r\n            sendConfig(color, color, name);\r\n        }, 200);\r\n    });\r\n</script>\r\n\r\n<div class=\"flex gap-15 margin-bottom-15\">\r\n    <div class=\"flex flex-direction-column gap-15\">\r\n        {#if index == 0}\r\n            <label for=\"player-name\">{globalThis.i18n(\"Player Name\")}</label>\r\n        {/if}\r\n        <input\r\n            type=\"text\"\r\n            name=\"player-name\"\r\n            bind:value={name}\r\n            on:input={() => {\r\n                sendConfig(color, color, name);\r\n            }}\r\n        />\r\n    </div>\r\n    <div class=\"flex flex-direction-column gap-15\">\r\n        {#if index == 0}\r\n            <label for=\"robe\">{globalThis.i18n(\"Robe Color\")}</label>\r\n        {/if}\r\n        <input\r\n            type=\"color\"\r\n            name=\"robe\"\r\n            style=\"height:21px\"\r\n            bind:value={color}\r\n            on:blur={() => {\r\n                sendConfig(color, color, name);\r\n            }}\r\n        />\r\n    </div>\r\n    <!-- <div class=\"flex flex-direction-column gap-15\">\r\n        <label for=\"magic color\">{globalThis.i18n(\"Magic Color\")}</label>\r\n        <input\r\n            type=\"color\"\r\n            name=\"magic color\"\r\n            bind:value={colorMagic}\r\n            on:blur={() => {\r\n                sendConfig(color, colorMagic, name);\r\n            }}\r\n        />\r\n    </div> -->\r\n</div>\r\n","<script>\r\n    import { onMount } from \"svelte\";\r\n    import { get } from \"svelte/store\";\r\n    import Button from \"./Button.svelte\";\r\n    import IconLink from \"./IconLink.svelte\";\r\n    import Lobby from \"./Lobby.svelte\";\r\n    import NoServersMessage from \"./NoServersMessage.svelte\";\r\n    import PlayerConfigHotseat from \"./PlayerConfigHotseat.svelte\";\r\n    import {\r\n        isInRoom,\r\n        isConnecting,\r\n        connected,\r\n        syncConnectedWithPieState,\r\n        disconnect,\r\n        isDisconnecting,\r\n    } from \"./stores\";\r\n    export let setRoute;\r\n    let isJoining = false;\r\n    let urlSearchParams = new URLSearchParams(location.search);\r\n    let wsUrl = urlSearchParams.get(\"pieUrl\");\r\n    let gameName = urlSearchParams.get(\"game\");\r\n    let gamePassword;\r\n    let joinRoomErrorText = \"\";\r\n    let connectionError = \"\";\r\n    let numOfHotseatPlayers = 2;\r\n\r\n    let localServerStatus = {\r\n        starting: false,\r\n        running: false,\r\n    };\r\n\r\n    function connect() {\r\n        if (wsUrl) {\r\n            console.log(\"Menu: Connect to server\", wsUrl);\r\n            $isConnecting = true;\r\n            const url = new URL(location.href);\r\n            url.searchParams.set(\"pieUrl\", wsUrl);\r\n            window.history.pushState(null, null, url);\r\n            // Clear error now that we are rejoining\r\n            connectionError = \"\";\r\n            return window\r\n                .connect_to_wsPie_server(wsUrl)\r\n                .catch((e) => {\r\n                    console.error(\"Connection error:\", e);\r\n                    connectionError = e;\r\n                })\r\n                .then(syncConnectedWithPieState);\r\n        }\r\n        return Promise.reject(\"No wsUrl defined to connect to\");\r\n    }\r\n    function leaveRoom() {\r\n        window.pieLeaveRoom();\r\n        $isInRoom = false;\r\n    }\r\n    function join(isHosting) {\r\n        if (gameName) {\r\n            if (window.isConnected()) {\r\n                // Note: Must not join a room until pixi is setup\r\n                console.log(\"Menu: Connect to game name\", gameName);\r\n                // Now that we are both connected to the pieServer and assets are loaded,\r\n                // we can host or join a game\r\n                isJoining = true;\r\n                // Reset error\r\n                joinRoomErrorText = \"\";\r\n                // TODO: differentiate making room and joining room\r\n                return window\r\n                    .joinRoom(\r\n                        { name: gameName, password: gamePassword },\r\n                        isHosting\r\n                    )\r\n                    .then(() => {\r\n                        const url = new URL(location.href);\r\n                        url.searchParams.set(\"game\", gameName);\r\n                        window.history.pushState(null, null, url);\r\n                        $isInRoom = true;\r\n                    })\r\n                    .catch((e) => {\r\n                        console.error(\"Could not join room\", e);\r\n                        joinRoomErrorText = e;\r\n                    })\r\n                    .then(() => {\r\n                        isJoining = false;\r\n                    });\r\n            } else {\r\n                console.error(\r\n                    \"Cannot join room until pieClient is connected to a pieServer\"\r\n                );\r\n            }\r\n        } else {\r\n            console.log(\"Cannot join game until a gameName is provided\");\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    let serverListPromise;\r\n    onMount(() => {\r\n        syncConnectedWithPieState();\r\n        // Get server list from server hub:\r\n        serverListPromise = fetch(\r\n            \"https://server-hub-d2b2v.ondigitalocean.app/\"\r\n        )\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((x) => {\r\n                console.log(\"Serverlist:\", x);\r\n                return x;\r\n            })\r\n            .catch(console.error);\r\n        // Subscribe to Local Server messages:\r\n        console.log(\"Subscribe to local server messages\");\r\n        globalThis.localServer?.onStatus((_localServerStatus) => {\r\n            console.log(\"Local server status\", localServerStatus);\r\n            localServerStatus = _localServerStatus;\r\n            if (localServerStatus.running) {\r\n                wsUrl = \"ws://localhost:8080\";\r\n                connect();\r\n            }\r\n        });\r\n        // For quickly joining a multiplayer game for testing\r\n        const quickJoin = globalThis.storageGet(\"devQuickJoin\");\r\n        // If not already connected, quickjoin\r\n        if (quickJoin && !get(connected)) {\r\n            console.log(\"dev: Auto joining\", quickJoin);\r\n\r\n            window\r\n                .connect_to_wsPie_server(\"ws://localhost:8080\")\r\n                .catch((e) => {\r\n                    console.error(\"Connection error:\", e);\r\n                    connectionError = e;\r\n                })\r\n                .then(syncConnectedWithPieState)\r\n                .then(() => {\r\n                    gameName = quickJoin;\r\n                    return join(true);\r\n                })\r\n                .then(() => {\r\n                    globalThis.configPlayer({ lobbyReady: true });\r\n                });\r\n        }\r\n    });\r\n    const SERVER_BROWSER = \"SERVER_BROWSER\";\r\n    const CUSTOM_SERVER = \"CUSTOM_SERVER\";\r\n    const LOCAL = \"LOCAL\";\r\n    const HOTSEAT = \"HOTSEAT\";\r\n    let subRoute = SERVER_BROWSER;\r\n    function setOptionsRoute(_subRoute) {\r\n        // Disconnect from current server when changing route\r\n        if (_subRoute !== subRoute) {\r\n            wsUrl = \"\";\r\n            window.intentionalDisconnect = true;\r\n            disconnect();\r\n        }\r\n        subRoute = _subRoute;\r\n    }\r\n</script>\r\n\r\n<div class=\"flex height100\">\r\n    <aside class=\"height100\">\r\n        <div\r\n            class=\"flex flex-direction-column justify-content-space-between height100\"\r\n        >\r\n            <div class=\"flex flex-direction-column gap-15 pad-20\">\r\n                <div class=\"flex align-items-center gap-20\">\r\n                    <Button\r\n                        on:click={() => {\r\n                            window.goBack();\r\n                        }}\r\n                        type=\"button\"\r\n                        text=\"🠔 Back\"\r\n                        class=\"sm\"\r\n                    />\r\n                    <h1 class=\"aside-title\">\r\n                        {globalThis.i18n(\"Multiplayer\")}\r\n                    </h1>\r\n                </div>\r\n                <div class=\"flex flex-direction-column gap-15\">\r\n                    {#if location.href.includes(\"localhost\")}\r\n                        <Button\r\n                            on:click={() => {\r\n                                // Dev helper button, quickly connect to local dev server\r\n                                setOptionsRoute(CUSTOM_SERVER);\r\n                                wsUrl = \"ws://localhost:8080\";\r\n                                connect();\r\n                            }}\r\n                            text=\"localhost:8080\"\r\n                            type=\"button\"\r\n                            style=\"text-align:left\"\r\n                            doLocalizeText={false}\r\n                        />\r\n                    {/if}\r\n                    <Button\r\n                        on:click={() => setOptionsRoute(SERVER_BROWSER)}\r\n                        isActive={subRoute == SERVER_BROWSER}\r\n                        type=\"button\"\r\n                        text={`${globalThis.i18n(\"Community Servers\")}`}\r\n                        style=\"text-align:left\"\r\n                        doLocalizeText={false}\r\n                    />\r\n                    <Button\r\n                        on:click={() => setOptionsRoute(CUSTOM_SERVER)}\r\n                        isActive={subRoute == CUSTOM_SERVER}\r\n                        type=\"button\"\r\n                        text={`${globalThis.i18n(\"Custom Server\")}`}\r\n                        style=\"text-align:left\"\r\n                        doLocalizeText={false}\r\n                    />\r\n                    <Button\r\n                        on:click={() => setOptionsRoute(LOCAL)}\r\n                        isActive={subRoute == LOCAL}\r\n                        type=\"button\"\r\n                        text={`${globalThis.i18n(\"Local (LAN)\")}`}\r\n                        style=\"text-align:left\"\r\n                        doLocalizeText={false}\r\n                    />\r\n                    <Button\r\n                        on:click={() => setOptionsRoute(HOTSEAT)}\r\n                        isActive={subRoute == HOTSEAT}\r\n                        type=\"button\"\r\n                        text={`${globalThis.i18n(\"Hotseat Multiplayer\")}`}\r\n                        style=\"text-align:left\"\r\n                        doLocalizeText={false}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <IconLink\r\n                src=\"ui/externalLink.svg\"\r\n                href=\"https://youtu.be/8CTbL38eCvk\"\r\n                text=\"How to Host your own Server\"\r\n            />\r\n        </div>\r\n    </aside>\r\n\r\n    <main>\r\n        {#if $isDisconnecting}\r\n            <div class=\"connecting-spinner\">\r\n                <div class=\"lds-ellipsis\">\r\n                    <div />\r\n                    <div />\r\n                    <div />\r\n                    <div />\r\n                </div>\r\n            </div>\r\n        {:else}\r\n            <div class=\"pad-20\" style=\"min-width:400px;\">\r\n                {#if subRoute == HOTSEAT}\r\n                    <div class=\"margin-bottom-15\">\r\n                        {globalThis.i18n(\"hotseat_description\")}\r\n                    </div>\r\n                    <div class=\"flex gap-15 margin-bottom-15\">\r\n                        <Button\r\n                            text={\"Add Player\"}\r\n                            on:click={() => {\r\n                                numOfHotseatPlayers += 1;\r\n                            }}\r\n                            style=\"width:auto;\"\r\n                        />\r\n                        {#if numOfHotseatPlayers > 2}\r\n                            <Button\r\n                                text={\"Remove Player\"}\r\n                                on:click={() => {\r\n                                    numOfHotseatPlayers -= 1;\r\n                                }}\r\n                                style=\"width:auto;\"\r\n                            />\r\n                        {/if}\r\n                    </div>\r\n                    {#each { length: numOfHotseatPlayers } as _, i}\r\n                        <PlayerConfigHotseat\r\n                            index={i}\r\n                            name={`Player ${i + 1}`}\r\n                        />\r\n                    {/each}\r\n                    <Button\r\n                        text={\"Start Game\"}\r\n                        style=\"width:auto;\"\r\n                        iconPath=\"forward.png\"\r\n                        on:click={() => {\r\n                            // Start music on button click to get past Firefox permissions\r\n                            window.playMusic();\r\n                            // Connect to solo\r\n                            window\r\n                                .startSingleplayer(numOfHotseatPlayers)\r\n                                .then(() => {\r\n                                    syncConnectedWithPieState();\r\n                                });\r\n                        }}\r\n                    />\r\n                {:else}\r\n                    {#if subRoute == SERVER_BROWSER}\r\n                        <div class=\"margin-bottom-15\">\r\n                            {#await serverListPromise}\r\n                                <p>...fetching servers</p>\r\n                            {:then serverList}\r\n                                <h2>{globalThis.i18n(\"Community Servers\")}</h2>\r\n                                {#if serverList}\r\n                                    <div\r\n                                        class={serverList?.message\r\n                                            ? \"margin-bottom-15 max-width-800\"\r\n                                            : \"\"}\r\n                                    >\r\n                                        {serverList?.message || \"\"}\r\n                                    </div>\r\n                                    {#if serverList && serverList.servers && serverList.servers.length !== 0}\r\n                                        <table>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th\r\n                                                        >{globalThis.i18n(\r\n                                                            \"Name\"\r\n                                                        )}</th\r\n                                                    >\r\n                                                    <th\r\n                                                        >{globalThis.i18n(\r\n                                                            \"Region\"\r\n                                                        )}</th\r\n                                                    >\r\n                                                    <th\r\n                                                        >{globalThis.i18n(\r\n                                                            \"Version\"\r\n                                                        )}</th\r\n                                                    >\r\n                                                    <th />\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {#if serverList?.servers}\r\n                                                    {#each serverList.servers as server (server.url)}\r\n                                                        {#if server}\r\n                                                            <tr\r\n                                                                class={wsUrl ==\r\n                                                                    server.url &&\r\n                                                                $connected\r\n                                                                    ? \"active\"\r\n                                                                    : \"\"}\r\n                                                            >\r\n                                                                <td\r\n                                                                    >{server.name}</td\r\n                                                                >\r\n                                                                <td\r\n                                                                    >{server.region}</td\r\n                                                                >\r\n                                                                <td\r\n                                                                    >{server.appVersion\r\n                                                                        ? `v${server.appVersion}`\r\n                                                                        : \"Unknown\"}</td\r\n                                                                >\r\n                                                                <td>\r\n                                                                    {#if wsUrl == server.url && $isConnecting}\r\n                                                                        <div\r\n                                                                            class=\"connecting-spinner\"\r\n                                                                        >\r\n                                                                            <div\r\n                                                                                class=\"lds-ellipsis\"\r\n                                                                            >\r\n                                                                                <div\r\n                                                                                />\r\n                                                                                <div\r\n                                                                                />\r\n                                                                                <div\r\n                                                                                />\r\n                                                                                <div\r\n                                                                                />\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    {:else if $connected}\r\n                                                                        {#if wsUrl == server.url}\r\n                                                                            <div\r\n                                                                                class=\"flex gap-15\"\r\n                                                                            >\r\n                                                                                <Button\r\n                                                                                    text={\"Connect\"}\r\n                                                                                    disabled={true}\r\n                                                                                    doLocalizeText={false}\r\n                                                                                />\r\n                                                                                <Button\r\n                                                                                    on:click={disconnect}\r\n                                                                                    text=\"Disconnect\"\r\n                                                                                />\r\n                                                                            </div>\r\n                                                                        {/if}\r\n                                                                    {:else}\r\n                                                                        <Button\r\n                                                                            on:click={() => {\r\n                                                                                wsUrl =\r\n                                                                                    server.url;\r\n                                                                                connect();\r\n                                                                            }}\r\n                                                                            text={\"Connect\"}\r\n                                                                            class=\"connect-btn\"\r\n                                                                            doLocalizeText={false}\r\n                                                                        />\r\n                                                                    {/if}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        {/if}\r\n                                                    {/each}\r\n                                                {/if}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    {:else}\r\n                                        <NoServersMessage />\r\n                                    {/if}\r\n                                {:else}\r\n                                    <NoServersMessage />\r\n                                {/if}\r\n                            {:catch error}\r\n                                <p style=\"color: red\">{error.message}</p>\r\n                            {/await}\r\n                        </div>\r\n                    {/if}\r\n                    {#if subRoute == LOCAL}\r\n                        <div class=\"flex gap-15 margin-bottom-15\">\r\n                            <Button\r\n                                on:click={() => {\r\n                                    globalThis.localServer.start();\r\n                                }}\r\n                                text=\"Host Local Server\"\r\n                            />\r\n                            <Button\r\n                                on:click={() => {\r\n                                    globalThis.localServer.start();\r\n                                }}\r\n                                disabled={!localServerStatus.running}\r\n                                text=\"Stop Local Server\"\r\n                            />\r\n                        </div>\r\n                        {#if localServerStatus.starting && !localServerStatus.running}\r\n                            <div class=\"connecting-spinner\">\r\n                                <div class=\"connecting-text\">\r\n                                    {globalThis.i18n(\r\n                                        \"Starting local server\"\r\n                                    )}...\r\n                                </div>\r\n                                <div class=\"lds-ellipsis\">\r\n                                    <div />\r\n                                    <div />\r\n                                    <div />\r\n                                    <div />\r\n                                </div>\r\n                            </div>\r\n                        {/if}\r\n                    {/if}\r\n                    {#if subRoute !== SERVER_BROWSER}\r\n                        <label for=\"server-url\"\r\n                            >{globalThis.i18n(\"Server Url\")}</label\r\n                        >\r\n                        <div>\r\n                            <input\r\n                                id=\"server-url\"\r\n                                bind:value={wsUrl}\r\n                                on:keypress={(e) => {\r\n                                    e.key == \"Enter\" && connect();\r\n                                }}\r\n                            />\r\n                            <div class=\"flex gap-15\">\r\n                                <Button\r\n                                    on:click={connect}\r\n                                    disabled={$connected}\r\n                                    text=\"Connect\"\r\n                                />\r\n                                <Button\r\n                                    on:click={disconnect}\r\n                                    disabled={!$connected}\r\n                                    text=\"Disconnect\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    {/if}\r\n                    {#if $isConnecting}\r\n                        <div class=\"connecting-spinner\">\r\n                            <div class=\"connecting-text\">\r\n                                {globalThis.i18n(\"Connecting\")}...\r\n                            </div>\r\n                            <div class=\"lds-ellipsis\">\r\n                                <div />\r\n                                <div />\r\n                                <div />\r\n                                <div />\r\n                            </div>\r\n                        </div>\r\n                    {/if}\r\n                    <div class=\"error-inline\">{connectionError}</div>\r\n                    {#if $connected}\r\n                        <div class=\"flex gap-15\">\r\n                            <div style=\"width:65%;\">\r\n                                <label for=\"game-name\"\r\n                                    >{globalThis.i18n(\"Game name\")}</label\r\n                                >\r\n                                <input\r\n                                    id=\"game-name\"\r\n                                    bind:value={gameName}\r\n                                    on:keypress={(e) => {\r\n                                        e.key == \"Enter\" && join(true);\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div style=\"width:35%;\">\r\n                                <label for=\"game-password\"\r\n                                    >{globalThis.i18n(\r\n                                        \"Password (Optional)\"\r\n                                    )}</label\r\n                                >\r\n                                <input\r\n                                    id=\"game-password\"\r\n                                    bind:value={gamePassword}\r\n                                    on:keypress={(e) => {\r\n                                        e.key == \"Enter\" && join(true);\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        {#if isJoining}\r\n                            Joining...\r\n                            <div class=\"lds-ellipsis\">\r\n                                <div />\r\n                                <div />\r\n                                <div />\r\n                                <div />\r\n                            </div>\r\n                        {:else if $isInRoom}\r\n                            <Button\r\n                                on:click={leaveRoom}\r\n                                text=\"Leave Room\"\r\n                                style=\"max-width:50%;\"\r\n                            />\r\n                        {:else}\r\n                            <div class=\"flex gap-15\">\r\n                                <Button\r\n                                    on:click={() => {\r\n                                        // true denotes that this is HOSTING not just joining\r\n                                        join(true).then(() => {\r\n                                            console.log(\r\n                                                \"Host: setting mods on server\"\r\n                                            );\r\n                                            globalThis.saveActiveMods(\r\n                                                globalThis.activeMods\r\n                                            );\r\n                                        });\r\n                                    }}\r\n                                    text=\"Host\"\r\n                                />\r\n                                <Button on:click={join} text=\"Join\" />\r\n                            </div>\r\n                            <div class=\"error-inline\">{joinRoomErrorText}</div>\r\n                        {/if}\r\n                    {/if}\r\n                    {#if $isInRoom}\r\n                        <Lobby {setRoute} />\r\n                    {/if}\r\n                {/if}\r\n            </div>\r\n        {/if}\r\n    </main>\r\n</div>\r\n\r\n<style>\r\n    table {\r\n        border-collapse: collapse;\r\n        border: 1px solid white;\r\n    }\r\n    thead tr {\r\n        background-color: #483f8e;\r\n        color: #ffffff;\r\n        text-align: left;\r\n    }\r\n\r\n    table th,\r\n    table td {\r\n        padding: 12px 15px;\r\n    }\r\n    table tbody tr:nth-of-type(even) {\r\n        background-color: #242424;\r\n    }\r\n    /* :global(table tr:hover .connect-btn) {\r\n        visibility: visible;\r\n    }\r\n    :global(table tr .connect-btn) {\r\n        visibility: hidden;\r\n    } */\r\n\r\n    table tbody td:not:first-child {\r\n        text-align: center;\r\n    }\r\n\r\n    table tbody tr.active {\r\n        font-weight: bold;\r\n        color: #7a6fcc;\r\n    }\r\n    .connecting-spinner {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-direction: column;\r\n    }\r\n    .connecting-text {\r\n        transform: translate(0, 20px);\r\n    }\r\n    input {\r\n        font-size: inherit;\r\n        -webkit-padding: 0.4em 0;\r\n        padding: 0.4em;\r\n        margin: 0 0 0.5em 0;\r\n        box-sizing: border-box;\r\n        border: 1px solid #ccc;\r\n        border-radius: 2px;\r\n        width: 100%;\r\n    }\r\n    .lds-ellipsis {\r\n        display: inline-block;\r\n        position: relative;\r\n        width: 80px;\r\n        height: 80px;\r\n    }\r\n    .lds-ellipsis div {\r\n        position: absolute;\r\n        top: 33px;\r\n        width: 13px;\r\n        height: 13px;\r\n        border-radius: 50%;\r\n        background: #fff;\r\n        animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n    }\r\n    .lds-ellipsis div:nth-child(1) {\r\n        left: 8px;\r\n        animation: lds-ellipsis1 0.6s infinite;\r\n    }\r\n    .lds-ellipsis div:nth-child(2) {\r\n        left: 8px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    .lds-ellipsis div:nth-child(3) {\r\n        left: 32px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    .lds-ellipsis div:nth-child(4) {\r\n        left: 56px;\r\n        animation: lds-ellipsis3 0.6s infinite;\r\n    }\r\n    @keyframes lds-ellipsis1 {\r\n        0% {\r\n            transform: scale(0);\r\n        }\r\n        100% {\r\n            transform: scale(1);\r\n        }\r\n    }\r\n    @keyframes lds-ellipsis3 {\r\n        0% {\r\n            transform: scale(1);\r\n        }\r\n        100% {\r\n            transform: scale(0);\r\n        }\r\n    }\r\n    @keyframes lds-ellipsis2 {\r\n        0% {\r\n            transform: translate(0, 0);\r\n        }\r\n        100% {\r\n            transform: translate(24px, 0);\r\n        }\r\n    }\r\n</style>\r\n","<script>\r\n  console.log(\"Menu: Svelte menu is running\");\r\n  import { onMount, onDestroy } from \"svelte\";\r\n  import Mods from \"./Mods.svelte\";\r\n  import Credits from \"./Credits.svelte\";\r\n  import Load from \"./Load.svelte\";\r\n  import Help from \"./Help.svelte\";\r\n  import Options from \"./Options.svelte\";\r\n  import Pie from \"./Pie.svelte\";\r\n  import Localization from \"./Localization.svelte\";\r\n  import PageInProgress from \"./PageInProgress.svelte\";\r\n  import {\r\n    PLAY,\r\n    OPTIONS,\r\n    CREDITS,\r\n    MODS,\r\n    HELP,\r\n    TODO,\r\n    LOCALIZATION,\r\n    MULTIPLAYER_SERVER_CHOOSER,\r\n    LOAD_GAMES,\r\n    MAGE_TYPE,\r\n  } from \"./routes\";\r\n  import Multiplayer from \"./Multiplayer.svelte\";\r\n  import MageTypeChooser from \"./MageTypeChooser.svelte\";\r\n  let route;\r\n  let inGame = false;\r\n  let forceRerender = 0;\r\n  // Used when changing the language to ensure the menu\r\n  // updates to the new language\r\n  window.refreshMenu = () => {\r\n    console.log(\"Force refresh menu\");\r\n    forceRerender++;\r\n  };\r\n  window.updateInGameMenuStatus = () => {\r\n    inGame = window.player !== undefined;\r\n  };\r\n  setRoute(PLAY);\r\n  function setRoute(r) {\r\n    console.log(\"Menu: Route:\", r);\r\n    route = r;\r\n    window.updateInGameMenuStatus();\r\n  }\r\n  window.goBack = function goBack() {\r\n    setRoute(PLAY);\r\n  };\r\n  function keydownListener(event) {\r\n    switch (event.code) {\r\n      case \"Escape\":\r\n        goBack();\r\n        break;\r\n    }\r\n  }\r\n\r\n  let updateProgress = 0;\r\n  // Start with updateComplete set to true so that the update UI will\r\n  // ONLY EVER hide the play ui if update messages start coming through\r\n  let updateComplete = true;\r\n  onMount(() => {\r\n    document.body.addEventListener(\"keydown\", keydownListener);\r\n  });\r\n\r\n  onDestroy(() => {\r\n    document.body.removeEventListener(\"keydown\", keydownListener);\r\n  });\r\n  window.setMenu = setRoute;\r\n  window.getMenuRoute = () => route;\r\n</script>\r\n\r\n{#key forceRerender}\r\n  <div id=\"menu\">\r\n    <div class=\"full-fill\">\r\n      <div class=\"decorative-border\">\r\n        {#if route == PLAY}\r\n          <div id=\"main-menu\">\r\n            <div id=\"main-menu-inner\">\r\n              <img\r\n                id=\"logo\"\r\n                src=\"ui/logo.png\"\r\n                alt=\"Spellmasons logo\"\r\n                width=\"800\"\r\n              />\r\n              {#if updateComplete}\r\n                <Pie {setRoute} {inGame} />\r\n              {:else}\r\n                <span>Update progress:</span>\r\n                <div class=\"progress\">\r\n                  <div\r\n                    style={`width:${Math.max(\r\n                      // Always give enough room to show the percentage text\r\n                      15,\r\n                      Math.floor(updateProgress * 100)\r\n                    )}%`}\r\n                  >\r\n                    {Math.floor(updateProgress * 100)}% &nbsp;\r\n                  </div>\r\n                </div>\r\n              {/if}\r\n            </div>\r\n          </div>\r\n        {:else if route == MULTIPLAYER_SERVER_CHOOSER}\r\n          <Multiplayer route {setRoute} />\r\n        {:else if route == LOCALIZATION}\r\n          <Localization route />\r\n        {:else if route == LOAD_GAMES}\r\n          <Load route {setRoute} />\r\n        {:else if route == OPTIONS}\r\n          <Options route {setRoute} />\r\n          <!-- {:else if route == MAGE_TYPE}\r\n          <MageTypeChooser route {setRoute} /> -->\r\n        {:else if route == CREDITS}\r\n          <Credits route />\r\n        {:else if route == MODS}\r\n          <Mods route />\r\n        {:else if route == HELP}\r\n          <Help route />\r\n        {:else if route == TODO}\r\n          <PageInProgress route />\r\n        {/if}\r\n      </div>\r\n    </div>\r\n  </div>\r\n{/key}\r\n\r\n<style global lang=\"scss\">\r\n  a:visited {\r\n    color: pink;\r\n  }\r\n  body {\r\n    margin: 0;\r\n  }\r\n  .max-width-800 {\r\n    max-width: 800px;\r\n  }\r\n  #logo {\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n  }\r\n  #menu {\r\n    color: white;\r\n    font-family: Forum;\r\n  }\r\n  .aside-title {\r\n    display: inline-block;\r\n    margin: 0;\r\n  }\r\n  main {\r\n    // Match the aside\r\n    padding-top: 20px;\r\n  }\r\n  #main-menu {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #171717;\r\n  }\r\n  #main-menu-inner {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .progress {\r\n    height: 32px;\r\n    width: 250px;\r\n    appearance: none;\r\n    border-radius: 8px;\r\n    margin: 8px;\r\n    border: 1px solid #320573;\r\n  }\r\n  .progress > div {\r\n    background-image: -webkit-linear-gradient(left, #320573, #9717e3);\r\n    border-radius: 8px;\r\n    text-align: right;\r\n    line-height: 32px;\r\n    height: 32px;\r\n  }\r\n  #main-menu input {\r\n    font-size: inherit;\r\n    -webkit-padding: 0.4em 0;\r\n    padding: 0.4em;\r\n    margin: 0 0 0.5em 0;\r\n    box-sizing: border-box;\r\n    border: 1px solid #ccc;\r\n    border-radius: 2px;\r\n    width: 100%;\r\n  }\r\n\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    width: 250px;\r\n    font-family: Forum;\r\n  }\r\n  // ------------------------\r\n  .height100 {\r\n    height: 100%;\r\n  }\r\n  .overflowyscroll {\r\n    overflow-y: scroll;\r\n  }\r\n  .flex {\r\n    display: flex;\r\n  }\r\n  .flex-wrap {\r\n    flex-wrap: wrap;\r\n  }\r\n  .flex-direction-column {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .justify-content-space-between {\r\n    justify-content: space-between;\r\n  }\r\n  .align-items-center {\r\n    align-items: center;\r\n  }\r\n  .gap-20 {\r\n    gap: 20px;\r\n  }\r\n  .gap-15 {\r\n    gap: 15px;\r\n  }\r\n  .margin-bottom-15 {\r\n    margin-bottom: 15px;\r\n  }\r\n  $button-purple: #483f8e;\r\n  // Remove default button styling\r\n  .button-wrapper {\r\n    background: none;\r\n    color: inherit;\r\n    border: none;\r\n    padding: 0;\r\n    font: inherit;\r\n    cursor: pointer;\r\n    outline: inherit;\r\n    color: white;\r\n    text-align: center;\r\n    width: 100%;\r\n    text-transform: capitalize;\r\n  }\r\n  .button-wrapper.sm {\r\n    max-width: 120px;\r\n  }\r\n  .button-wrapper {\r\n    border: 16px solid;\r\n    border-image-outset: 0;\r\n    border-image-repeat: stretch;\r\n    border-image-slice: 250;\r\n    border-image-source: url(\"/ui/Assets_Icon_Border_QtrCircle_2_Purple.png\");\r\n    border-image-width: 1;\r\n    transition: 0.2s;\r\n    // Allow button to scale without blurring. Credit: https://stackoverflow.com/a/16878602/4418836\r\n    backface-visibility: hidden;\r\n    transform: translateZ(0);\r\n    -webkit-font-smoothing: subpixel-antialiased;\r\n    /* background-clip ensures that the background color wont overlap the border */\r\n    background-clip: padding-box;\r\n    background-color: $button-purple;\r\n  }\r\n  .button-wrapper:disabled,\r\n  .button-wrapper.appear-disabled {\r\n    border-image-source: url(\"/ui/Assets_Icon_Border_QtrCircle_3.png\");\r\n    background-color: #262324;\r\n  }\r\n  .button-wrapper:disabled .icon {\r\n    // Tint disabled button icons grey\r\n    filter: brightness(50%);\r\n  }\r\n  .button-wrapper.button-wrapper-bg-2 {\r\n    border-image-source: url(\"/ui/Assets_Icon_Border_QtrCircle_1_Purple.png\");\r\n  }\r\n  .button-wrapper.is-active,\r\n  .button-wrapper:hover {\r\n    filter: brightness(145%);\r\n  }\r\n\r\n  .button-wrapper div {\r\n    padding: 0 10px;\r\n  }\r\n\r\n  button:disabled {\r\n    color: #999;\r\n  }\r\n\r\n  button:focus {\r\n    border-color: #666;\r\n  }\r\n  .list {\r\n    gap: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .full-fill {\r\n    width: 100vw;\r\n    height: 100vh;\r\n  }\r\n  .decorative-border {\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 20px solid;\r\n    user-select: none;\r\n    border-image-source: url(\"/ui/Assets_Gif_Border.png\");\r\n    border-image-slice: 30;\r\n    border-image-width: 50px;\r\n    border-image-outset: 0;\r\n    box-sizing: border-box;\r\n    // background-color is necessary for this border on FF but it must not be set on Chrome\r\n    // background-color: #171717;\r\n    overflow-y: auto;\r\n  }\r\n  .pad-20 {\r\n    padding: 20px;\r\n  }\r\n\r\n  .error-inline {\r\n    color: red;\r\n    margin: 8px 0;\r\n  }\r\n</style>\r\n","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\t// document.body is for devel, menu-inner is for when this is embedded in Spellmasons\r\n\ttarget: document.getElementById('menu-app') || document.body,\r\n\tprops: {}\r\n});\r\n\r\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","get_slot_context","definition","ctx","$$scope","slice","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","null_to_empty","set_store_value","ret","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set_data","wholeText","set_input_value","input","set_style","important","removeProperty","setProperty","toggle_class","toggle","classList","set_current_component","get_current_component","Error","onMount","on_mount","onDestroy","bubble","type","call","this","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","flushidx","flush","saved_component","update","pop","add","clear","fragment","before_update","dirty","p","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","handle_promise","promise","info","token","index","resolved","child_ctx","undefined","current","needs_flush","blocks","m","mount","then","error","catch","hasCatch","pending","update_await_block_branch","outro_and_destroy_block","lookup","get_spread_update","levels","updates","to_null_out","accounted_for","n","create_component","mount_component","customElement","new_on_destroy","map","filter","destroy_component","make_dirty","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","indexOf","splice","$set","$$props","obj","$$set","div","globalThis","i18n","create_if_block","class","button_class_value","button","span","t1","t1_value","iconPath","isActive","title","disabled","doLocalizeText","_class","if_block","img","alt","width","div1","img_src_value","func","join","func_1","func_2","create_if_block_1","activeMods","tr","td0","td1","h3","div0","td2","div2","div3","td3","t4","t4_value","t6","t6_value","t8","t8_value","t10","t10_value","button_changes","each_value","mods","table","tbody","each_blocks","div5","aside","div4","h1","main","s","card","id","u","forceRerender","window","goBack","modName","saveActiveMods","td","h20","p0","p1","h21","p2","h22","details","did","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","SAVE_PREFIX","OPTIONS","LOAD_GAMES","LOCALIZATION","CREDITS","MODS","HELP","PLAY","MULTIPLAYER_SERVER_CHOOSER","lobbyPlayerList","connected","isInRoom","isConnecting","isDisconnecting","syncConnectedWithPieState","_connected","isConnected","disconnect","intentionalDisconnect","pieDisconnect","displayName","button0_changes","setRoute","saveFiles","getSaveFiles","$$invalidate","localStorage","x","includes","split","saveFileName","dateString","saveName","parsedDate","parseInt","date","isNaN","Date","toString","sort","get","player","lobbyReady","saveFile","load","deleteSave","setMenuIsInRoom","inRoom","explainKeys","div6","h10","h11","h12","h13","menuExplain","slot_ctx","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","lets","merged","len","Math","max","align","t_value","toLowerCase","entries","controlMap","h2","changeControl","code","activeKey","activeIndex","persistControls","setActive","keydownListener","console","mousedownListener","mouseButtonToKeyCode","mouseButton","body","label0","input0","label1","input1","storageGet","color","convertToHex","cssColor","sendConfig","colorMagic","configPlayer","$lobbyPlayerList","setTimeout","limitParticleEmitters","isElectron","create_if_block_2","volume","volumeMusic","volumeGame","input2","changeVolume","changeVolumeMusic","changeVolumeGame","skipTutorial","isTutorialComplete","AUDIO","VIDEO","PLAYER_CONFIG","CONTROLS","EXTRAS","button6","button6_isactive_value","button1_changes","button2_changes","button3_changes","button4_changes","ev","optionsRoute","setOptionsRoute","_optionsRoute","cinematicCameraEnabled","UIEasyOnTheEyes","setlimitParticleEmitters","number","setOption","storedZoom","NaN","STORAGE_ID_UI_ZOOM","parseFloat","zoomAmount","setCinematicCameraEnabled","checked","Jprompt","yesText","forceShow","resetTutorial","playNextSong","electronSettings","setFullscreen","requestFullscreen","err","message","exitFullscreen","round","storageSet","setUIZoom","monitorFPS","toggleDevTools","setupPixiPromise","isConnectedToSinglePlayer","show_if_1","numberOfHotseatPlayers","create_if_block_4","br","doSave","clientId","fileName","JtextPrompt","now","save","errMsg","inGame","savePrefix","quicksaveKey","forceRerenderTutorialSkip","playMusic","startSingleplayer","noBtnText","noBtnKey","URL","location","searchParams","history","pushState","exitCurrentGame","closeMenu","warn","fullyExitGame","languages","getSupportedLanguages","currentLanguageCode","getChosenLanguageCode","setLanguage","t0","t0_value","t2","t2_value","t5","t5_value","devUnderworld","gameMode","thead","setInterval","clearInterval","intervalId","setDifficulty","_b","pieInhabitPlayer","label","if_block0","if_block1","hotseatPlayerConfig","HOTSEAT","SERVER_BROWSER","create_if_block_11","LOCAL","create_if_block_9","if_block2","create_if_block_8","create_if_block_7","create_if_block_3","t","servers","div_class_value","create_if_block_14","th0","th1","th2","th3","each_value_1","get_key","old_blocks","dynamic","list","destroy","create_each_block","next","get_context","old_indexes","new_blocks","new_lookup","deltas","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","region","appVersion","tr_class_value","create_if_block_18","create_if_block_15","running","starting","create_if_block_10","show_if","CUSTOM_SERVER","gamePassword","serverListPromise","isJoining","urlSearchParams","URLSearchParams","search","wsUrl","gameName","joinRoomErrorText","connectionError","numOfHotseatPlayers","localServerStatus","connect","log","$isConnecting","connect_to_wsPie_server","e","reject","isHosting","joinRoom","password","$isInRoom","fetch","response","json","localServer","onStatus","_localServerStatus","quickJoin","subRoute","_subRoute","pieLeaveRoom","server","floor","updateProgress","route","updateInGameMenuStatus","refreshMenu","setMenu","getMenuRoute","getElementById"],"mappings":"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"}